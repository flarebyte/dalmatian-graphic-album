// tslint:disable: member-access member-ordering max-classes-per-file prefer-const no-class variable-name no-expression-statement no-object-mutation no-this readonly-keyword no-var-keyword typedef readonly-array no-namespace

import {flatbuffers} from 'flatbuffers';
export { flatbuffers };
// automatically generated by the FlatBuffers compiler, do not modify

/**
 * @enum
 */
export enum anyUint{
  NONE= 0,
  Uint8= 1,
  Uint16= 2,
  Uint32= 3
};

/**
 * @enum
 */
export enum ObjectValue{
  NONE= 0,
  IRI= 1,
  Localized= 2,
  Text= 3,
  Bool= 4,
  Uint8= 5,
  Uint16= 6,
  Uint32= 7,
  Float= 8,
  Vector2d= 9,
  Vector3d= 10,
  Vector2dFloat= 11,
  Vector3dFloat= 12,
  AnyURI= 13,
  IsoDateTime= 14,
  VectorColorRGBA= 15,
  VectorFraction= 16
};

/**
 * @enum
 */
export enum QuickName{
  Alpha= 0,
  Beta= 1,
  Gamma= 2,
  Delta= 3,
  Epsilon= 4,
  Zeta= 5,
  Eta= 6,
  Theta= 7,
  Iota= 8,
  Kappa= 9,
  Lambda= 10,
  Mu= 11
};

/**
 * @enum
 */
export enum ArcFlag{
  LargeArcA= 0,
  SmallArcA= 1,
  LargeArcB= 2,
  SmallArcB= 3
};

/**
 * @enum
 */
export enum Draw{
  NONE= 0,
  MoveTo= 1,
  LineTo= 2,
  Horizontal= 3,
  Vertical= 4,
  CubicCurve= 5,
  SmoothCubicCurve= 6,
  QuadraticCurve= 7,
  SmoothQuadraticCurve= 8,
  EllipticalArc= 9,
  Point= 10
};

/**
 * @enum
 */
export enum LayoutPart{
  NONE= 0,
  Section= 1,
  Page= 2,
  Tile= 3
};

/**
 * @enum
 */
export enum Layout{
  NONE= 0,
  TileLayout= 1
};

/**
 * @enum
 */
export enum Composition{
  NONE= 0,
  Clipping= 1
};

/**
 * @enum
 */
export enum Interlocutor{
  NONE= 0,
  SpeakingCharacter= 1,
  ThinkingCharacter= 2,
  ScreamingCharacter= 3,
  WhisperingCharacter= 4,
  BroadcastingCharacter= 5,
  ListeningCharacter= 6,
  Narrator= 7
};

/**
 * @constructor
 */
export class Vec2d {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns Vec2d
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Vec2d {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @returns number
 */
x():number {
  return this.bb!.readUint32(this.bb_pos);
};

/**
 * @returns number
 */
y():number {
  return this.bb!.readUint32(this.bb_pos + 4);
};

/**
 * @param flatbuffers.Builder builder
 * @param number x
 * @param number y
 * @returns flatbuffers.Offset
 */
static createVec2d(builder:flatbuffers.Builder, x: number, y: number):flatbuffers.Offset {
  builder.prep(4, 8);
  builder.writeInt32(y);
  builder.writeInt32(x);
  return builder.offset();
};

}
/**
 * @constructor
 */
export class Vec2dFloat {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns Vec2dFloat
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Vec2dFloat {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @returns number
 */
x():number {
  return this.bb!.readFloat32(this.bb_pos);
};

/**
 * @returns number
 */
y():number {
  return this.bb!.readFloat32(this.bb_pos + 4);
};

/**
 * @param flatbuffers.Builder builder
 * @param number x
 * @param number y
 * @returns flatbuffers.Offset
 */
static createVec2dFloat(builder:flatbuffers.Builder, x: number, y: number):flatbuffers.Offset {
  builder.prep(4, 8);
  builder.writeFloat32(y);
  builder.writeFloat32(x);
  return builder.offset();
};

}
/**
 * @constructor
 */
export class Vec3d {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns Vec3d
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Vec3d {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @returns number
 */
x():number {
  return this.bb!.readUint32(this.bb_pos);
};

/**
 * @returns number
 */
y():number {
  return this.bb!.readUint32(this.bb_pos + 4);
};

/**
 * @returns number
 */
z():number {
  return this.bb!.readUint32(this.bb_pos + 8);
};

/**
 * @param flatbuffers.Builder builder
 * @param number x
 * @param number y
 * @param number z
 * @returns flatbuffers.Offset
 */
static createVec3d(builder:flatbuffers.Builder, x: number, y: number, z: number):flatbuffers.Offset {
  builder.prep(4, 12);
  builder.writeInt32(z);
  builder.writeInt32(y);
  builder.writeInt32(x);
  return builder.offset();
};

}
/**
 * @constructor
 */
export class Vec3dFloat {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns Vec3dFloat
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Vec3dFloat {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @returns number
 */
x():number {
  return this.bb!.readFloat32(this.bb_pos);
};

/**
 * @returns number
 */
y():number {
  return this.bb!.readFloat32(this.bb_pos + 4);
};

/**
 * @returns number
 */
z():number {
  return this.bb!.readFloat32(this.bb_pos + 8);
};

/**
 * @param flatbuffers.Builder builder
 * @param number x
 * @param number y
 * @param number z
 * @returns flatbuffers.Offset
 */
static createVec3dFloat(builder:flatbuffers.Builder, x: number, y: number, z: number):flatbuffers.Offset {
  builder.prep(4, 12);
  builder.writeFloat32(z);
  builder.writeFloat32(y);
  builder.writeFloat32(x);
  return builder.offset();
};

}
/**
 * @constructor
 */
export class ColorRGBA {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns ColorRGBA
 */
__init(i:number, bb:flatbuffers.ByteBuffer):ColorRGBA {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @returns number
 */
r():number {
  return this.bb!.readUint16(this.bb_pos);
};

/**
 * @returns number
 */
g():number {
  return this.bb!.readUint16(this.bb_pos + 2);
};

/**
 * @returns number
 */
b():number {
  return this.bb!.readUint16(this.bb_pos + 4);
};

/**
 * @returns number
 */
a():number {
  return this.bb!.readUint16(this.bb_pos + 6);
};

/**
 * @param flatbuffers.Builder builder
 * @param number r
 * @param number g
 * @param number b
 * @param number a
 * @returns flatbuffers.Offset
 */
static createColorRGBA(builder:flatbuffers.Builder, r: number, g: number, b: number, a: number):flatbuffers.Offset {
  builder.prep(2, 8);
  builder.writeInt16(a);
  builder.writeInt16(b);
  builder.writeInt16(g);
  builder.writeInt16(r);
  return builder.offset();
};

}
/**
 * @constructor
 */
export class Fraction {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns Fraction
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Fraction {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @returns number
 */
numerator():number {
  return this.bb!.readUint32(this.bb_pos);
};

/**
 * @returns number
 */
denominator():number {
  return this.bb!.readUint32(this.bb_pos + 4);
};

/**
 * @param flatbuffers.Builder builder
 * @param number numerator
 * @param number denominator
 * @returns flatbuffers.Offset
 */
static createFraction(builder:flatbuffers.Builder, numerator: number, denominator: number):flatbuffers.Offset {
  builder.prep(4, 8);
  builder.writeInt32(denominator);
  builder.writeInt32(numerator);
  return builder.offset();
};

}
/**
 * @constructor
 */
export class Curie {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns Curie
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Curie {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param Curie= obj
 * @returns Curie
 */
static getRootAsCurie(bb:flatbuffers.ByteBuffer, obj?:Curie):Curie {
  return (obj || new Curie).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param flatbuffers.Encoding= optionalEncoding
 * @returns string|Uint8Array|null
 */
prefix():string|null
prefix(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
prefix(optionalEncoding?:any):string|Uint8Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param flatbuffers.Builder builder
 */
static startCurie(builder:flatbuffers.Builder) {
  builder.startObject(1);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset prefixOffset
 */
static addPrefix(builder:flatbuffers.Builder, prefixOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, prefixOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endCurie(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

}
/**
 * @constructor
 */
export class IRI {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns IRI
 */
__init(i:number, bb:flatbuffers.ByteBuffer):IRI {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param IRI= obj
 * @returns IRI
 */
static getRootAsIRI(bb:flatbuffers.ByteBuffer, obj?:IRI):IRI {
  return (obj || new IRI).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param Curie= obj
 * @returns Curie|null
 */
curie(obj?:Curie):Curie|null {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new Curie).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
};

/**
 * @param flatbuffers.Encoding= optionalEncoding
 * @returns string|Uint8Array|null
 */
path():string|null
path(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
path(optionalEncoding?:any):string|Uint8Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param flatbuffers.Builder builder
 */
static startIRI(builder:flatbuffers.Builder) {
  builder.startObject(2);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset curieOffset
 */
static addCurie(builder:flatbuffers.Builder, curieOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, curieOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset pathOffset
 */
static addPath(builder:flatbuffers.Builder, pathOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, pathOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endIRI(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  builder.requiredField(offset, 6); // path
  return offset;
};

}
/**
 * @constructor
 */
export class Localized {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns Localized
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Localized {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param Localized= obj
 * @returns Localized
 */
static getRootAsLocalized(bb:flatbuffers.ByteBuffer, obj?:Localized):Localized {
  return (obj || new Localized).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param flatbuffers.Encoding= optionalEncoding
 * @returns string|Uint8Array|null
 */
text():string|null
text(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
text(optionalEncoding?:any):string|Uint8Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param flatbuffers.Encoding= optionalEncoding
 * @returns string|Uint8Array|null
 */
language():string|null
language(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
language(optionalEncoding?:any):string|Uint8Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param flatbuffers.Builder builder
 */
static startLocalized(builder:flatbuffers.Builder) {
  builder.startObject(2);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset textOffset
 */
static addText(builder:flatbuffers.Builder, textOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, textOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset languageOffset
 */
static addLanguage(builder:flatbuffers.Builder, languageOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, languageOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endLocalized(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  builder.requiredField(offset, 4); // text
  builder.requiredField(offset, 6); // language
  return offset;
};

}
/**
 * @constructor
 */
export class Text {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns Text
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Text {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param Text= obj
 * @returns Text
 */
static getRootAsText(bb:flatbuffers.ByteBuffer, obj?:Text):Text {
  return (obj || new Text).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param flatbuffers.Encoding= optionalEncoding
 * @returns string|Uint8Array|null
 */
value():string|null
value(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
value(optionalEncoding?:any):string|Uint8Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param flatbuffers.Builder builder
 */
static startText(builder:flatbuffers.Builder) {
  builder.startObject(1);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset valueOffset
 */
static addValue(builder:flatbuffers.Builder, valueOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, valueOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endText(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  builder.requiredField(offset, 4); // value
  return offset;
};

}
/**
 * @constructor
 */
export class AnyURI {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns AnyURI
 */
__init(i:number, bb:flatbuffers.ByteBuffer):AnyURI {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param AnyURI= obj
 * @returns AnyURI
 */
static getRootAsAnyURI(bb:flatbuffers.ByteBuffer, obj?:AnyURI):AnyURI {
  return (obj || new AnyURI).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param flatbuffers.Encoding= optionalEncoding
 * @returns string|Uint8Array|null
 */
value():string|null
value(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
value(optionalEncoding?:any):string|Uint8Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param flatbuffers.Encoding= optionalEncoding
 * @returns string|Uint8Array|null
 */
mediaType():string|null
mediaType(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
mediaType(optionalEncoding?:any):string|Uint8Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param flatbuffers.Builder builder
 */
static startAnyURI(builder:flatbuffers.Builder) {
  builder.startObject(2);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset valueOffset
 */
static addValue(builder:flatbuffers.Builder, valueOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, valueOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset mediaTypeOffset
 */
static addMediaType(builder:flatbuffers.Builder, mediaTypeOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, mediaTypeOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endAnyURI(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  builder.requiredField(offset, 4); // value
  return offset;
};

}
/**
 * @constructor
 */
export class IsoDateTime {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns IsoDateTime
 */
__init(i:number, bb:flatbuffers.ByteBuffer):IsoDateTime {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param IsoDateTime= obj
 * @returns IsoDateTime
 */
static getRootAsIsoDateTime(bb:flatbuffers.ByteBuffer, obj?:IsoDateTime):IsoDateTime {
  return (obj || new IsoDateTime).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param flatbuffers.Encoding= optionalEncoding
 * @returns string|Uint8Array|null
 */
value():string|null
value(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
value(optionalEncoding?:any):string|Uint8Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param flatbuffers.Builder builder
 */
static startIsoDateTime(builder:flatbuffers.Builder) {
  builder.startObject(1);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset valueOffset
 */
static addValue(builder:flatbuffers.Builder, valueOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, valueOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endIsoDateTime(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  builder.requiredField(offset, 4); // value
  return offset;
};

}
/**
 * @constructor
 */
export class Bool {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns Bool
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Bool {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param Bool= obj
 * @returns Bool
 */
static getRootAsBool(bb:flatbuffers.ByteBuffer, obj?:Bool):Bool {
  return (obj || new Bool).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns boolean
 */
value():boolean {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
};

/**
 * @param flatbuffers.Builder builder
 */
static startBool(builder:flatbuffers.Builder) {
  builder.startObject(1);
};

/**
 * @param flatbuffers.Builder builder
 * @param boolean value
 */
static addValue(builder:flatbuffers.Builder, value:boolean) {
  builder.addFieldInt8(0, +value, +false);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endBool(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

}
/**
 * @constructor
 */
export class Uint8 {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns Uint8
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Uint8 {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param Uint8= obj
 * @returns Uint8
 */
static getRootAsUint8(bb:flatbuffers.ByteBuffer, obj?:Uint8):Uint8 {
  return (obj || new Uint8).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param number index
 * @returns number
 */
value(index: number):number|null {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readUint8(this.bb!.__vector(this.bb_pos + offset) + index) : 0;
};

/**
 * @returns number
 */
valueLength():number {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns Uint8Array
 */
valueArray():Uint8Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? new Uint8Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param flatbuffers.Builder builder
 */
static startUint8(builder:flatbuffers.Builder) {
  builder.startObject(1);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset valueOffset
 */
static addValue(builder:flatbuffers.Builder, valueOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, valueOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param Array.<number> data
 * @returns flatbuffers.Offset
 */
static createValueVector(builder:flatbuffers.Builder, data:number[] | Uint8Array):flatbuffers.Offset {
  builder.startVector(1, data.length, 1);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt8(data[i]);
  }
  return builder.endVector();
};

/**
 * @param flatbuffers.Builder builder
 * @param number numElems
 */
static startValueVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(1, numElems, 1);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endUint8(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

}
/**
 * @constructor
 */
export class Uint16 {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns Uint16
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Uint16 {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param Uint16= obj
 * @returns Uint16
 */
static getRootAsUint16(bb:flatbuffers.ByteBuffer, obj?:Uint16):Uint16 {
  return (obj || new Uint16).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param number index
 * @returns number
 */
value(index: number):number|null {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readUint16(this.bb!.__vector(this.bb_pos + offset) + index * 2) : 0;
};

/**
 * @returns number
 */
valueLength():number {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns Uint16Array
 */
valueArray():Uint16Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? new Uint16Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param flatbuffers.Builder builder
 */
static startUint16(builder:flatbuffers.Builder) {
  builder.startObject(1);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset valueOffset
 */
static addValue(builder:flatbuffers.Builder, valueOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, valueOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param Array.<number> data
 * @returns flatbuffers.Offset
 */
static createValueVector(builder:flatbuffers.Builder, data:number[] | Uint8Array):flatbuffers.Offset {
  builder.startVector(2, data.length, 2);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt16(data[i]);
  }
  return builder.endVector();
};

/**
 * @param flatbuffers.Builder builder
 * @param number numElems
 */
static startValueVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(2, numElems, 2);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endUint16(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

}
/**
 * @constructor
 */
export class Uint32 {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns Uint32
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Uint32 {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param Uint32= obj
 * @returns Uint32
 */
static getRootAsUint32(bb:flatbuffers.ByteBuffer, obj?:Uint32):Uint32 {
  return (obj || new Uint32).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param number index
 * @returns number
 */
value(index: number):number|null {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readUint32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;
};

/**
 * @returns number
 */
valueLength():number {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns Uint32Array
 */
valueArray():Uint32Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? new Uint32Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param flatbuffers.Builder builder
 */
static startUint32(builder:flatbuffers.Builder) {
  builder.startObject(1);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset valueOffset
 */
static addValue(builder:flatbuffers.Builder, valueOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, valueOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param Array.<number> data
 * @returns flatbuffers.Offset
 */
static createValueVector(builder:flatbuffers.Builder, data:number[] | Uint8Array):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt32(data[i]);
  }
  return builder.endVector();
};

/**
 * @param flatbuffers.Builder builder
 * @param number numElems
 */
static startValueVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endUint32(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

}
/**
 * @constructor
 */
export class Float {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns Float
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Float {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param Float= obj
 * @returns Float
 */
static getRootAsFloat(bb:flatbuffers.ByteBuffer, obj?:Float):Float {
  return (obj || new Float).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param number index
 * @returns number
 */
value(index: number):number|null {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readFloat32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;
};

/**
 * @returns number
 */
valueLength():number {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns Float32Array
 */
valueArray():Float32Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? new Float32Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param flatbuffers.Builder builder
 */
static startFloat(builder:flatbuffers.Builder) {
  builder.startObject(1);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset valueOffset
 */
static addValue(builder:flatbuffers.Builder, valueOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, valueOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param Array.<number> data
 * @returns flatbuffers.Offset
 */
static createValueVector(builder:flatbuffers.Builder, data:number[] | Uint8Array):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addFloat32(data[i]);
  }
  return builder.endVector();
};

/**
 * @param flatbuffers.Builder builder
 * @param number numElems
 */
static startValueVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endFloat(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  builder.requiredField(offset, 4); // value
  return offset;
};

}
/**
 * @constructor
 */
export class Vector2d {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns Vector2d
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Vector2d {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param Vector2d= obj
 * @returns Vector2d
 */
static getRootAsVector2d(bb:flatbuffers.ByteBuffer, obj?:Vector2d):Vector2d {
  return (obj || new Vector2d).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param Vec2d= obj
 * @returns Vec2d|null
 */
value(obj?:Vec2d):Vec2d|null {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new Vec2d).__init(this.bb_pos + offset, this.bb!) : null;
};

/**
 * @param flatbuffers.Builder builder
 */
static startVector2d(builder:flatbuffers.Builder) {
  builder.startObject(1);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset valueOffset
 */
static addValue(builder:flatbuffers.Builder, valueOffset:flatbuffers.Offset) {
  builder.addFieldStruct(0, valueOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endVector2d(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  builder.requiredField(offset, 4); // value
  return offset;
};

}
/**
 * @constructor
 */
export class Vector3d {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns Vector3d
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Vector3d {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param Vector3d= obj
 * @returns Vector3d
 */
static getRootAsVector3d(bb:flatbuffers.ByteBuffer, obj?:Vector3d):Vector3d {
  return (obj || new Vector3d).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param Vec3d= obj
 * @returns Vec3d|null
 */
value(obj?:Vec3d):Vec3d|null {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new Vec3d).__init(this.bb_pos + offset, this.bb!) : null;
};

/**
 * @param flatbuffers.Builder builder
 */
static startVector3d(builder:flatbuffers.Builder) {
  builder.startObject(1);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset valueOffset
 */
static addValue(builder:flatbuffers.Builder, valueOffset:flatbuffers.Offset) {
  builder.addFieldStruct(0, valueOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endVector3d(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  builder.requiredField(offset, 4); // value
  return offset;
};

}
/**
 * @constructor
 */
export class Vector2dFloat {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns Vector2dFloat
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Vector2dFloat {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param Vector2dFloat= obj
 * @returns Vector2dFloat
 */
static getRootAsVector2dFloat(bb:flatbuffers.ByteBuffer, obj?:Vector2dFloat):Vector2dFloat {
  return (obj || new Vector2dFloat).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param Vec2dFloat= obj
 * @returns Vec2dFloat|null
 */
value(obj?:Vec2dFloat):Vec2dFloat|null {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new Vec2dFloat).__init(this.bb_pos + offset, this.bb!) : null;
};

/**
 * @param flatbuffers.Builder builder
 */
static startVector2dFloat(builder:flatbuffers.Builder) {
  builder.startObject(1);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset valueOffset
 */
static addValue(builder:flatbuffers.Builder, valueOffset:flatbuffers.Offset) {
  builder.addFieldStruct(0, valueOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endVector2dFloat(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  builder.requiredField(offset, 4); // value
  return offset;
};

}
/**
 * @constructor
 */
export class Vector3dFloat {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns Vector3dFloat
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Vector3dFloat {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param Vector3dFloat= obj
 * @returns Vector3dFloat
 */
static getRootAsVector3dFloat(bb:flatbuffers.ByteBuffer, obj?:Vector3dFloat):Vector3dFloat {
  return (obj || new Vector3dFloat).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param Vec3dFloat= obj
 * @returns Vec3dFloat|null
 */
value(obj?:Vec3dFloat):Vec3dFloat|null {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new Vec3dFloat).__init(this.bb_pos + offset, this.bb!) : null;
};

/**
 * @param flatbuffers.Builder builder
 */
static startVector3dFloat(builder:flatbuffers.Builder) {
  builder.startObject(1);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset valueOffset
 */
static addValue(builder:flatbuffers.Builder, valueOffset:flatbuffers.Offset) {
  builder.addFieldStruct(0, valueOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endVector3dFloat(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  builder.requiredField(offset, 4); // value
  return offset;
};

}
/**
 * @constructor
 */
export class VectorColorRGBA {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns VectorColorRGBA
 */
__init(i:number, bb:flatbuffers.ByteBuffer):VectorColorRGBA {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param VectorColorRGBA= obj
 * @returns VectorColorRGBA
 */
static getRootAsVectorColorRGBA(bb:flatbuffers.ByteBuffer, obj?:VectorColorRGBA):VectorColorRGBA {
  return (obj || new VectorColorRGBA).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param ColorRGBA= obj
 * @returns ColorRGBA|null
 */
value(obj?:ColorRGBA):ColorRGBA|null {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new ColorRGBA).__init(this.bb_pos + offset, this.bb!) : null;
};

/**
 * @param flatbuffers.Builder builder
 */
static startVectorColorRGBA(builder:flatbuffers.Builder) {
  builder.startObject(1);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset valueOffset
 */
static addValue(builder:flatbuffers.Builder, valueOffset:flatbuffers.Offset) {
  builder.addFieldStruct(0, valueOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endVectorColorRGBA(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  builder.requiredField(offset, 4); // value
  return offset;
};

}
/**
 * @constructor
 */
export class VectorFraction {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns VectorFraction
 */
__init(i:number, bb:flatbuffers.ByteBuffer):VectorFraction {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param VectorFraction= obj
 * @returns VectorFraction
 */
static getRootAsVectorFraction(bb:flatbuffers.ByteBuffer, obj?:VectorFraction):VectorFraction {
  return (obj || new VectorFraction).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param Fraction= obj
 * @returns Fraction|null
 */
value(obj?:Fraction):Fraction|null {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new Fraction).__init(this.bb_pos + offset, this.bb!) : null;
};

/**
 * @param flatbuffers.Builder builder
 */
static startVectorFraction(builder:flatbuffers.Builder) {
  builder.startObject(1);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset valueOffset
 */
static addValue(builder:flatbuffers.Builder, valueOffset:flatbuffers.Offset) {
  builder.addFieldStruct(0, valueOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endVectorFraction(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  builder.requiredField(offset, 4); // value
  return offset;
};

}
/**
 * @constructor
 */
export class Assertion {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns Assertion
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Assertion {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param Assertion= obj
 * @returns Assertion
 */
static getRootAsAssertion(bb:flatbuffers.ByteBuffer, obj?:Assertion):Assertion {
  return (obj || new Assertion).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param IRI= obj
 * @returns IRI|null
 */
predicate(obj?:IRI):IRI|null {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new IRI).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
};

/**
 * @returns ObjectValue
 */
objectValueType():ObjectValue {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? /**  */ (this.bb!.readUint8(this.bb_pos + offset)) : ObjectValue.NONE;
};

/**
 * @param flatbuffers.Table obj
 * @returns ?flatbuffers.Table
 */
objectValue<T extends flatbuffers.Table>(obj:T):T|null {
  var offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__union(obj, this.bb_pos + offset) : null;
};

/**
 * @param flatbuffers.Builder builder
 */
static startAssertion(builder:flatbuffers.Builder) {
  builder.startObject(3);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset predicateOffset
 */
static addPredicate(builder:flatbuffers.Builder, predicateOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, predicateOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param ObjectValue objectValueType
 */
static addObjectValueType(builder:flatbuffers.Builder, objectValueType:ObjectValue) {
  builder.addFieldInt8(1, objectValueType, ObjectValue.NONE);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset objectValueOffset
 */
static addObjectValue(builder:flatbuffers.Builder, objectValueOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, objectValueOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endAssertion(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  builder.requiredField(offset, 4); // predicate
  builder.requiredField(offset, 8); // objectValue
  return offset;
};

}
/**
 * @constructor
 */
export class Metadata {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns Metadata
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Metadata {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param Metadata= obj
 * @returns Metadata
 */
static getRootAsMetadata(bb:flatbuffers.ByteBuffer, obj?:Metadata):Metadata {
  return (obj || new Metadata).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns number
 */
id():number {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @param number index
 * @param Assertion= obj
 * @returns Assertion
 */
assertion(index: number, obj?:Assertion):Assertion|null {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new Assertion).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
};

/**
 * @returns number
 */
assertionLength():number {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param flatbuffers.Builder builder
 */
static startMetadata(builder:flatbuffers.Builder) {
  builder.startObject(2);
};

/**
 * @param flatbuffers.Builder builder
 * @param number id
 */
static addId(builder:flatbuffers.Builder, id:number) {
  builder.addFieldInt32(0, id, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset assertionOffset
 */
static addAssertion(builder:flatbuffers.Builder, assertionOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, assertionOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param Array.<flatbuffers.Offset> data
 * @returns flatbuffers.Offset
 */
static createAssertionVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param flatbuffers.Builder builder
 * @param number numElems
 */
static startAssertionVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endMetadata(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

}
/**
 * @constructor
 */
export class Point {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns Point
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Point {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @returns number
 */
x():number {
  return this.bb!.readUint32(this.bb_pos);
};

/**
 * @returns number
 */
y():number {
  return this.bb!.readUint32(this.bb_pos + 4);
};

/**
 * @returns QuickName
 */
name():QuickName {
  return /**  */ (this.bb!.readInt8(this.bb_pos + 8));
};

/**
 * @param flatbuffers.Builder builder
 * @param number x
 * @param number y
 * @param QuickName name
 * @returns flatbuffers.Offset
 */
static createPoint(builder:flatbuffers.Builder, x: number, y: number, name: QuickName):flatbuffers.Offset {
  builder.prep(4, 12);
  builder.pad(3);
  builder.writeInt8(name);
  builder.writeInt32(y);
  builder.writeInt32(x);
  return builder.offset();
};

}
/**
 * @constructor
 */
export class MoveTo {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns MoveTo
 */
__init(i:number, bb:flatbuffers.ByteBuffer):MoveTo {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @returns number
 */
x():number {
  return this.bb!.readUint32(this.bb_pos);
};

/**
 * @returns number
 */
y():number {
  return this.bb!.readUint32(this.bb_pos + 4);
};

/**
 * @param flatbuffers.Builder builder
 * @param number x
 * @param number y
 * @returns flatbuffers.Offset
 */
static createMoveTo(builder:flatbuffers.Builder, x: number, y: number):flatbuffers.Offset {
  builder.prep(4, 8);
  builder.writeInt32(y);
  builder.writeInt32(x);
  return builder.offset();
};

}
/**
 * @constructor
 */
export class LineTo {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns LineTo
 */
__init(i:number, bb:flatbuffers.ByteBuffer):LineTo {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @returns number
 */
x():number {
  return this.bb!.readUint32(this.bb_pos);
};

/**
 * @returns number
 */
y():number {
  return this.bb!.readUint32(this.bb_pos + 4);
};

/**
 * @param flatbuffers.Builder builder
 * @param number x
 * @param number y
 * @returns flatbuffers.Offset
 */
static createLineTo(builder:flatbuffers.Builder, x: number, y: number):flatbuffers.Offset {
  builder.prep(4, 8);
  builder.writeInt32(y);
  builder.writeInt32(x);
  return builder.offset();
};

}
/**
 * @constructor
 */
export class Horizontal {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns Horizontal
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Horizontal {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @returns number
 */
x():number {
  return this.bb!.readUint32(this.bb_pos);
};

/**
 * @param flatbuffers.Builder builder
 * @param number x
 * @returns flatbuffers.Offset
 */
static createHorizontal(builder:flatbuffers.Builder, x: number):flatbuffers.Offset {
  builder.prep(4, 4);
  builder.writeInt32(x);
  return builder.offset();
};

}
/**
 * @constructor
 */
export class Vertical {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns Vertical
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Vertical {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @returns number
 */
y():number {
  return this.bb!.readUint32(this.bb_pos);
};

/**
 * @param flatbuffers.Builder builder
 * @param number y
 * @returns flatbuffers.Offset
 */
static createVertical(builder:flatbuffers.Builder, y: number):flatbuffers.Offset {
  builder.prep(4, 4);
  builder.writeInt32(y);
  return builder.offset();
};

}
/**
 * @constructor
 */
export class CubicCurve {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns CubicCurve
 */
__init(i:number, bb:flatbuffers.ByteBuffer):CubicCurve {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @returns number
 */
x1():number {
  return this.bb!.readUint32(this.bb_pos);
};

/**
 * @returns number
 */
y1():number {
  return this.bb!.readUint32(this.bb_pos + 4);
};

/**
 * @returns number
 */
x2():number {
  return this.bb!.readUint32(this.bb_pos + 8);
};

/**
 * @returns number
 */
y2():number {
  return this.bb!.readUint32(this.bb_pos + 12);
};

/**
 * @returns number
 */
x():number {
  return this.bb!.readUint32(this.bb_pos + 16);
};

/**
 * @returns number
 */
y():number {
  return this.bb!.readUint32(this.bb_pos + 20);
};

/**
 * @param flatbuffers.Builder builder
 * @param number x1
 * @param number y1
 * @param number x2
 * @param number y2
 * @param number x
 * @param number y
 * @returns flatbuffers.Offset
 */
static createCubicCurve(builder:flatbuffers.Builder, x1: number, y1: number, x2: number, y2: number, x: number, y: number):flatbuffers.Offset {
  builder.prep(4, 24);
  builder.writeInt32(y);
  builder.writeInt32(x);
  builder.writeInt32(y2);
  builder.writeInt32(x2);
  builder.writeInt32(y1);
  builder.writeInt32(x1);
  return builder.offset();
};

}
/**
 * @constructor
 */
export class SmoothCubicCurve {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns SmoothCubicCurve
 */
__init(i:number, bb:flatbuffers.ByteBuffer):SmoothCubicCurve {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @returns number
 */
x2():number {
  return this.bb!.readUint32(this.bb_pos);
};

/**
 * @returns number
 */
y2():number {
  return this.bb!.readUint32(this.bb_pos + 4);
};

/**
 * @returns number
 */
x():number {
  return this.bb!.readUint32(this.bb_pos + 8);
};

/**
 * @returns number
 */
y():number {
  return this.bb!.readUint32(this.bb_pos + 12);
};

/**
 * @param flatbuffers.Builder builder
 * @param number x2
 * @param number y2
 * @param number x
 * @param number y
 * @returns flatbuffers.Offset
 */
static createSmoothCubicCurve(builder:flatbuffers.Builder, x2: number, y2: number, x: number, y: number):flatbuffers.Offset {
  builder.prep(4, 16);
  builder.writeInt32(y);
  builder.writeInt32(x);
  builder.writeInt32(y2);
  builder.writeInt32(x2);
  return builder.offset();
};

}
/**
 * @constructor
 */
export class QuadraticCurve {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns QuadraticCurve
 */
__init(i:number, bb:flatbuffers.ByteBuffer):QuadraticCurve {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @returns number
 */
x1():number {
  return this.bb!.readUint32(this.bb_pos);
};

/**
 * @returns number
 */
y1():number {
  return this.bb!.readUint32(this.bb_pos + 4);
};

/**
 * @returns number
 */
x():number {
  return this.bb!.readUint32(this.bb_pos + 8);
};

/**
 * @returns number
 */
y():number {
  return this.bb!.readUint32(this.bb_pos + 12);
};

/**
 * @param flatbuffers.Builder builder
 * @param number x1
 * @param number y1
 * @param number x
 * @param number y
 * @returns flatbuffers.Offset
 */
static createQuadraticCurve(builder:flatbuffers.Builder, x1: number, y1: number, x: number, y: number):flatbuffers.Offset {
  builder.prep(4, 16);
  builder.writeInt32(y);
  builder.writeInt32(x);
  builder.writeInt32(y1);
  builder.writeInt32(x1);
  return builder.offset();
};

}
/**
 * @constructor
 */
export class SmoothQuadraticCurve {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns SmoothQuadraticCurve
 */
__init(i:number, bb:flatbuffers.ByteBuffer):SmoothQuadraticCurve {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @returns number
 */
x():number {
  return this.bb!.readUint32(this.bb_pos);
};

/**
 * @returns number
 */
y():number {
  return this.bb!.readUint32(this.bb_pos + 4);
};

/**
 * @param flatbuffers.Builder builder
 * @param number x
 * @param number y
 * @returns flatbuffers.Offset
 */
static createSmoothQuadraticCurve(builder:flatbuffers.Builder, x: number, y: number):flatbuffers.Offset {
  builder.prep(4, 8);
  builder.writeInt32(y);
  builder.writeInt32(x);
  return builder.offset();
};

}
/**
 * @constructor
 */
export class EllipticalArc {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns EllipticalArc
 */
__init(i:number, bb:flatbuffers.ByteBuffer):EllipticalArc {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @returns number
 */
rx():number {
  return this.bb!.readUint32(this.bb_pos);
};

/**
 * @returns number
 */
ry():number {
  return this.bb!.readUint32(this.bb_pos + 4);
};

/**
 * @returns number
 */
rotate():number {
  return this.bb!.readFloat32(this.bb_pos + 8);
};

/**
 * @returns ArcFlag
 */
arcFlag():ArcFlag {
  return /**  */ (this.bb!.readInt8(this.bb_pos + 12));
};

/**
 * @returns number
 */
x():number {
  return this.bb!.readUint32(this.bb_pos + 16);
};

/**
 * @returns number
 */
y():number {
  return this.bb!.readUint32(this.bb_pos + 20);
};

/**
 * @param flatbuffers.Builder builder
 * @param number rx
 * @param number ry
 * @param number rotate
 * @param ArcFlag arcFlag
 * @param number x
 * @param number y
 * @returns flatbuffers.Offset
 */
static createEllipticalArc(builder:flatbuffers.Builder, rx: number, ry: number, rotate: number, arcFlag: ArcFlag, x: number, y: number):flatbuffers.Offset {
  builder.prep(4, 24);
  builder.writeInt32(y);
  builder.writeInt32(x);
  builder.pad(3);
  builder.writeInt8(arcFlag);
  builder.writeFloat32(rotate);
  builder.writeInt32(ry);
  builder.writeInt32(rx);
  return builder.offset();
};

}
/**
 * @constructor
 */
export class Tile {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns Tile
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Tile {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @returns number
 */
panelId():number {
  return this.bb!.readUint16(this.bb_pos);
};

/**
 * @param Fraction= obj
 * @returns Fraction|null
 */
x(obj?:Fraction):Fraction|null {
  return (obj || new Fraction).__init(this.bb_pos + 4, this.bb!);
};

/**
 * @param Fraction= obj
 * @returns Fraction|null
 */
y(obj?:Fraction):Fraction|null {
  return (obj || new Fraction).__init(this.bb_pos + 12, this.bb!);
};

/**
 * @param Fraction= obj
 * @returns Fraction|null
 */
width(obj?:Fraction):Fraction|null {
  return (obj || new Fraction).__init(this.bb_pos + 20, this.bb!);
};

/**
 * @param Fraction= obj
 * @returns Fraction|null
 */
height(obj?:Fraction):Fraction|null {
  return (obj || new Fraction).__init(this.bb_pos + 28, this.bb!);
};

/**
 * @param flatbuffers.Builder builder
 * @param number panelId
 * @param number x_numerator
 * @param number x_denominator
 * @param number y_numerator
 * @param number y_denominator
 * @param number width_numerator
 * @param number width_denominator
 * @param number height_numerator
 * @param number height_denominator
 * @returns flatbuffers.Offset
 */
static createTile(builder:flatbuffers.Builder, panelId: number, x_numerator: number, x_denominator: number, y_numerator: number, y_denominator: number, width_numerator: number, width_denominator: number, height_numerator: number, height_denominator: number):flatbuffers.Offset {
  builder.prep(4, 36);
  builder.prep(4, 8);
  builder.writeInt32(height_denominator);
  builder.writeInt32(height_numerator);
  builder.prep(4, 8);
  builder.writeInt32(width_denominator);
  builder.writeInt32(width_numerator);
  builder.prep(4, 8);
  builder.writeInt32(y_denominator);
  builder.writeInt32(y_numerator);
  builder.prep(4, 8);
  builder.writeInt32(x_denominator);
  builder.writeInt32(x_numerator);
  builder.pad(2);
  builder.writeInt16(panelId);
  return builder.offset();
};

}
/**
 * @constructor
 */
export class Section {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns Section
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Section {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static createSection(builder:flatbuffers.Builder):flatbuffers.Offset {
  builder.prep(1, 0);
  return builder.offset();
};

}
/**
 * @constructor
 */
export class Page {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns Page
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Page {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static createPage(builder:flatbuffers.Builder):flatbuffers.Offset {
  builder.prep(1, 0);
  return builder.offset();
};

}
/**
 * @constructor
 */
export class TileLayout {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns TileLayout
 */
__init(i:number, bb:flatbuffers.ByteBuffer):TileLayout {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param TileLayout= obj
 * @returns TileLayout
 */
static getRootAsTileLayout(bb:flatbuffers.ByteBuffer, obj?:TileLayout):TileLayout {
  return (obj || new TileLayout).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param number index
 * @returns LayoutPart
 */
partType(index: number):LayoutPart|null {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? /**  */ (this.bb!.readUint8(this.bb!.__vector(this.bb_pos + offset) + index)) : /**  */ (0);
};

/**
 * @returns number
 */
partTypeLength():number {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns Uint8Array
 */
partTypeArray():Uint8Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? new Uint8Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param number index
 * @param flatbuffers.Table= obj
 * @returns ?flatbuffers.Table
 */
part<T extends flatbuffers.Table>(index: number, obj:T):T|null {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__union(obj, this.bb!.__vector(this.bb_pos + offset) + index * 4) : null;
};

/**
 * @returns number
 */
partLength():number {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param flatbuffers.Builder builder
 */
static startTileLayout(builder:flatbuffers.Builder) {
  builder.startObject(2);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset partTypeOffset
 */
static addPartType(builder:flatbuffers.Builder, partTypeOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, partTypeOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param Array.<LayoutPart> data
 * @returns flatbuffers.Offset
 */
static createPartTypeVector(builder:flatbuffers.Builder, data:LayoutPart[]):flatbuffers.Offset {
  builder.startVector(1, data.length, 1);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt8(data[i]);
  }
  return builder.endVector();
};

/**
 * @param flatbuffers.Builder builder
 * @param number numElems
 */
static startPartTypeVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(1, numElems, 1);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset partOffset
 */
static addPart(builder:flatbuffers.Builder, partOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, partOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param Array.<flatbuffers.Offset> data
 * @returns flatbuffers.Offset
 */
static createPartVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param flatbuffers.Builder builder
 * @param number numElems
 */
static startPartVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endTileLayout(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

}
/**
 * @constructor
 */
export class Entity {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns Entity
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Entity {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param Entity= obj
 * @returns Entity
 */
static getRootAsEntity(bb:flatbuffers.ByteBuffer, obj?:Entity):Entity {
  return (obj || new Entity).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param Metadata= obj
 * @returns Metadata|null
 */
metadata(obj?:Metadata):Metadata|null {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new Metadata).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
};

/**
 * @param flatbuffers.Builder builder
 */
static startEntity(builder:flatbuffers.Builder) {
  builder.startObject(1);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset metadataOffset
 */
static addMetadata(builder:flatbuffers.Builder, metadataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, metadataOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endEntity(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

}
/**
 * @constructor
 */
export class Illustration {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns Illustration
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Illustration {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param Illustration= obj
 * @returns Illustration
 */
static getRootAsIllustration(bb:flatbuffers.ByteBuffer, obj?:Illustration):Illustration {
  return (obj || new Illustration).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param Metadata= obj
 * @returns Metadata|null
 */
metadata(obj?:Metadata):Metadata|null {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new Metadata).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
};

/**
 * @returns anyUint
 */
dataType():anyUint {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? /**  */ (this.bb!.readUint8(this.bb_pos + offset)) : anyUint.NONE;
};

/**
 * @param flatbuffers.Table obj
 * @returns ?flatbuffers.Table
 */
data<T extends flatbuffers.Table>(obj:T):T|null {
  var offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__union(obj, this.bb_pos + offset) : null;
};

/**
 * @param flatbuffers.Builder builder
 */
static startIllustration(builder:flatbuffers.Builder) {
  builder.startObject(3);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset metadataOffset
 */
static addMetadata(builder:flatbuffers.Builder, metadataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, metadataOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param anyUint dataType
 */
static addDataType(builder:flatbuffers.Builder, dataType:anyUint) {
  builder.addFieldInt8(1, dataType, anyUint.NONE);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset dataOffset
 */
static addData(builder:flatbuffers.Builder, dataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, dataOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endIllustration(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

}
/**
 * @constructor
 */
export class Shape {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns Shape
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Shape {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param Shape= obj
 * @returns Shape
 */
static getRootAsShape(bb:flatbuffers.ByteBuffer, obj?:Shape):Shape {
  return (obj || new Shape).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param Metadata= obj
 * @returns Metadata|null
 */
metadata(obj?:Metadata):Metadata|null {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new Metadata).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
};

/**
 * @param number index
 * @returns Draw
 */
drawingType(index: number):Draw|null {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? /**  */ (this.bb!.readUint8(this.bb!.__vector(this.bb_pos + offset) + index)) : /**  */ (0);
};

/**
 * @returns number
 */
drawingTypeLength():number {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns Uint8Array
 */
drawingTypeArray():Uint8Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? new Uint8Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param number index
 * @param flatbuffers.Table= obj
 * @returns ?flatbuffers.Table
 */
drawing<T extends flatbuffers.Table>(index: number, obj:T):T|null {
  var offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__union(obj, this.bb!.__vector(this.bb_pos + offset) + index * 4) : null;
};

/**
 * @returns number
 */
drawingLength():number {
  var offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns number
 */
entityId():number {
  var offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readUint16(this.bb_pos + offset) : 0;
};

/**
 * @returns number
 */
illustrationId():number {
  var offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.readUint16(this.bb_pos + offset) : 0;
};

/**
 * @param flatbuffers.Builder builder
 */
static startShape(builder:flatbuffers.Builder) {
  builder.startObject(5);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset metadataOffset
 */
static addMetadata(builder:flatbuffers.Builder, metadataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, metadataOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset drawingTypeOffset
 */
static addDrawingType(builder:flatbuffers.Builder, drawingTypeOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, drawingTypeOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param Array.<Draw> data
 * @returns flatbuffers.Offset
 */
static createDrawingTypeVector(builder:flatbuffers.Builder, data:Draw[]):flatbuffers.Offset {
  builder.startVector(1, data.length, 1);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt8(data[i]);
  }
  return builder.endVector();
};

/**
 * @param flatbuffers.Builder builder
 * @param number numElems
 */
static startDrawingTypeVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(1, numElems, 1);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset drawingOffset
 */
static addDrawing(builder:flatbuffers.Builder, drawingOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, drawingOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param Array.<flatbuffers.Offset> data
 * @returns flatbuffers.Offset
 */
static createDrawingVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param flatbuffers.Builder builder
 * @param number numElems
 */
static startDrawingVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param flatbuffers.Builder builder
 * @param number entityId
 */
static addEntityId(builder:flatbuffers.Builder, entityId:number) {
  builder.addFieldInt16(3, entityId, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param number illustrationId
 */
static addIllustrationId(builder:flatbuffers.Builder, illustrationId:number) {
  builder.addFieldInt16(4, illustrationId, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endShape(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

}
/**
 * @constructor
 */
export class Clipping {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns Clipping
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Clipping {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @returns number
 */
illustrationId():number {
  return this.bb!.readUint16(this.bb_pos);
};

/**
 * @param Fraction= obj
 * @returns Fraction|null
 */
x(obj?:Fraction):Fraction|null {
  return (obj || new Fraction).__init(this.bb_pos + 4, this.bb!);
};

/**
 * @param Fraction= obj
 * @returns Fraction|null
 */
y(obj?:Fraction):Fraction|null {
  return (obj || new Fraction).__init(this.bb_pos + 12, this.bb!);
};

/**
 * @param Fraction= obj
 * @returns Fraction|null
 */
width(obj?:Fraction):Fraction|null {
  return (obj || new Fraction).__init(this.bb_pos + 20, this.bb!);
};

/**
 * @param Fraction= obj
 * @returns Fraction|null
 */
height(obj?:Fraction):Fraction|null {
  return (obj || new Fraction).__init(this.bb_pos + 28, this.bb!);
};

/**
 * @param flatbuffers.Builder builder
 * @param number illustrationId
 * @param number x_numerator
 * @param number x_denominator
 * @param number y_numerator
 * @param number y_denominator
 * @param number width_numerator
 * @param number width_denominator
 * @param number height_numerator
 * @param number height_denominator
 * @returns flatbuffers.Offset
 */
static createClipping(builder:flatbuffers.Builder, illustrationId: number, x_numerator: number, x_denominator: number, y_numerator: number, y_denominator: number, width_numerator: number, width_denominator: number, height_numerator: number, height_denominator: number):flatbuffers.Offset {
  builder.prep(4, 36);
  builder.prep(4, 8);
  builder.writeInt32(height_denominator);
  builder.writeInt32(height_numerator);
  builder.prep(4, 8);
  builder.writeInt32(width_denominator);
  builder.writeInt32(width_numerator);
  builder.prep(4, 8);
  builder.writeInt32(y_denominator);
  builder.writeInt32(y_numerator);
  builder.prep(4, 8);
  builder.writeInt32(x_denominator);
  builder.writeInt32(x_numerator);
  builder.pad(2);
  builder.writeInt16(illustrationId);
  return builder.offset();
};

}
/**
 * @constructor
 */
export class Panel {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns Panel
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Panel {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param Panel= obj
 * @returns Panel
 */
static getRootAsPanel(bb:flatbuffers.ByteBuffer, obj?:Panel):Panel {
  return (obj || new Panel).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param Metadata= obj
 * @returns Metadata|null
 */
metadata(obj?:Metadata):Metadata|null {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new Metadata).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
};

/**
 * @param number index
 * @returns Composition
 */
compositionType(index: number):Composition|null {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? /**  */ (this.bb!.readUint8(this.bb!.__vector(this.bb_pos + offset) + index)) : /**  */ (0);
};

/**
 * @returns number
 */
compositionTypeLength():number {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns Uint8Array
 */
compositionTypeArray():Uint8Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? new Uint8Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param number index
 * @param flatbuffers.Table= obj
 * @returns ?flatbuffers.Table
 */
composition<T extends flatbuffers.Table>(index: number, obj:T):T|null {
  var offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__union(obj, this.bb!.__vector(this.bb_pos + offset) + index * 4) : null;
};

/**
 * @returns number
 */
compositionLength():number {
  var offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param flatbuffers.Builder builder
 */
static startPanel(builder:flatbuffers.Builder) {
  builder.startObject(3);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset metadataOffset
 */
static addMetadata(builder:flatbuffers.Builder, metadataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, metadataOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset compositionTypeOffset
 */
static addCompositionType(builder:flatbuffers.Builder, compositionTypeOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, compositionTypeOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param Array.<Composition> data
 * @returns flatbuffers.Offset
 */
static createCompositionTypeVector(builder:flatbuffers.Builder, data:Composition[]):flatbuffers.Offset {
  builder.startVector(1, data.length, 1);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt8(data[i]);
  }
  return builder.endVector();
};

/**
 * @param flatbuffers.Builder builder
 * @param number numElems
 */
static startCompositionTypeVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(1, numElems, 1);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset compositionOffset
 */
static addComposition(builder:flatbuffers.Builder, compositionOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, compositionOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param Array.<flatbuffers.Offset> data
 * @returns flatbuffers.Offset
 */
static createCompositionVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param flatbuffers.Builder builder
 * @param number numElems
 */
static startCompositionVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endPanel(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

}
/**
 * @constructor
 */
export class SpeakingCharacter {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns SpeakingCharacter
 */
__init(i:number, bb:flatbuffers.ByteBuffer):SpeakingCharacter {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @returns number
 */
entityId():number {
  return this.bb!.readUint16(this.bb_pos);
};

/**
 * @param flatbuffers.Builder builder
 * @param number entityId
 * @returns flatbuffers.Offset
 */
static createSpeakingCharacter(builder:flatbuffers.Builder, entityId: number):flatbuffers.Offset {
  builder.prep(2, 2);
  builder.writeInt16(entityId);
  return builder.offset();
};

}
/**
 * @constructor
 */
export class ThinkingCharacter {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns ThinkingCharacter
 */
__init(i:number, bb:flatbuffers.ByteBuffer):ThinkingCharacter {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @returns number
 */
entityId():number {
  return this.bb!.readUint16(this.bb_pos);
};

/**
 * @param flatbuffers.Builder builder
 * @param number entityId
 * @returns flatbuffers.Offset
 */
static createThinkingCharacter(builder:flatbuffers.Builder, entityId: number):flatbuffers.Offset {
  builder.prep(2, 2);
  builder.writeInt16(entityId);
  return builder.offset();
};

}
/**
 * @constructor
 */
export class ScreamingCharacter {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns ScreamingCharacter
 */
__init(i:number, bb:flatbuffers.ByteBuffer):ScreamingCharacter {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @returns number
 */
entityId():number {
  return this.bb!.readUint16(this.bb_pos);
};

/**
 * @param flatbuffers.Builder builder
 * @param number entityId
 * @returns flatbuffers.Offset
 */
static createScreamingCharacter(builder:flatbuffers.Builder, entityId: number):flatbuffers.Offset {
  builder.prep(2, 2);
  builder.writeInt16(entityId);
  return builder.offset();
};

}
/**
 * @constructor
 */
export class WhisperingCharacter {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns WhisperingCharacter
 */
__init(i:number, bb:flatbuffers.ByteBuffer):WhisperingCharacter {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @returns number
 */
entityId():number {
  return this.bb!.readUint16(this.bb_pos);
};

/**
 * @param flatbuffers.Builder builder
 * @param number entityId
 * @returns flatbuffers.Offset
 */
static createWhisperingCharacter(builder:flatbuffers.Builder, entityId: number):flatbuffers.Offset {
  builder.prep(2, 2);
  builder.writeInt16(entityId);
  return builder.offset();
};

}
/**
 * @constructor
 */
export class BroadcastingCharacter {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns BroadcastingCharacter
 */
__init(i:number, bb:flatbuffers.ByteBuffer):BroadcastingCharacter {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @returns number
 */
entityId():number {
  return this.bb!.readUint16(this.bb_pos);
};

/**
 * @param flatbuffers.Builder builder
 * @param number entityId
 * @returns flatbuffers.Offset
 */
static createBroadcastingCharacter(builder:flatbuffers.Builder, entityId: number):flatbuffers.Offset {
  builder.prep(2, 2);
  builder.writeInt16(entityId);
  return builder.offset();
};

}
/**
 * @constructor
 */
export class ListeningCharacter {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns ListeningCharacter
 */
__init(i:number, bb:flatbuffers.ByteBuffer):ListeningCharacter {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @returns number
 */
entityId():number {
  return this.bb!.readUint16(this.bb_pos);
};

/**
 * @param flatbuffers.Builder builder
 * @param number entityId
 * @returns flatbuffers.Offset
 */
static createListeningCharacter(builder:flatbuffers.Builder, entityId: number):flatbuffers.Offset {
  builder.prep(2, 2);
  builder.writeInt16(entityId);
  return builder.offset();
};

}
/**
 * @constructor
 */
export class Narrator {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns Narrator
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Narrator {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @returns number
 */
entityId():number {
  return this.bb!.readUint16(this.bb_pos);
};

/**
 * @param flatbuffers.Builder builder
 * @param number entityId
 * @returns flatbuffers.Offset
 */
static createNarrator(builder:flatbuffers.Builder, entityId: number):flatbuffers.Offset {
  builder.prep(2, 2);
  builder.writeInt16(entityId);
  return builder.offset();
};

}
/**
 * @constructor
 */
export class Speech {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns Speech
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Speech {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param Speech= obj
 * @returns Speech
 */
static getRootAsSpeech(bb:flatbuffers.ByteBuffer, obj?:Speech):Speech {
  return (obj || new Speech).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param Metadata= obj
 * @returns Metadata|null
 */
metadata(obj?:Metadata):Metadata|null {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new Metadata).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
};

/**
 * @param number index
 * @returns Interlocutor
 */
interlocutorType(index: number):Interlocutor|null {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? /**  */ (this.bb!.readUint8(this.bb!.__vector(this.bb_pos + offset) + index)) : /**  */ (0);
};

/**
 * @returns number
 */
interlocutorTypeLength():number {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns Uint8Array
 */
interlocutorTypeArray():Uint8Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? new Uint8Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param number index
 * @param flatbuffers.Table= obj
 * @returns ?flatbuffers.Table
 */
interlocutor<T extends flatbuffers.Table>(index: number, obj:T):T|null {
  var offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__union(obj, this.bb!.__vector(this.bb_pos + offset) + index * 4) : null;
};

/**
 * @returns number
 */
interlocutorLength():number {
  var offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param flatbuffers.Builder builder
 */
static startSpeech(builder:flatbuffers.Builder) {
  builder.startObject(3);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset metadataOffset
 */
static addMetadata(builder:flatbuffers.Builder, metadataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, metadataOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset interlocutorTypeOffset
 */
static addInterlocutorType(builder:flatbuffers.Builder, interlocutorTypeOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, interlocutorTypeOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param Array.<Interlocutor> data
 * @returns flatbuffers.Offset
 */
static createInterlocutorTypeVector(builder:flatbuffers.Builder, data:Interlocutor[]):flatbuffers.Offset {
  builder.startVector(1, data.length, 1);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt8(data[i]);
  }
  return builder.endVector();
};

/**
 * @param flatbuffers.Builder builder
 * @param number numElems
 */
static startInterlocutorTypeVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(1, numElems, 1);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset interlocutorOffset
 */
static addInterlocutor(builder:flatbuffers.Builder, interlocutorOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, interlocutorOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param Array.<flatbuffers.Offset> data
 * @returns flatbuffers.Offset
 */
static createInterlocutorVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param flatbuffers.Builder builder
 * @param number numElems
 */
static startInterlocutorVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endSpeech(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

}
/**
 * @constructor
 */
export class Publishing {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns Publishing
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Publishing {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param Publishing= obj
 * @returns Publishing
 */
static getRootAsPublishing(bb:flatbuffers.ByteBuffer, obj?:Publishing):Publishing {
  return (obj || new Publishing).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param Metadata= obj
 * @returns Metadata|null
 */
metadata(obj?:Metadata):Metadata|null {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new Metadata).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
};

/**
 * @returns Layout
 */
layoutType():Layout {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? /**  */ (this.bb!.readUint8(this.bb_pos + offset)) : Layout.NONE;
};

/**
 * @param flatbuffers.Table obj
 * @returns ?flatbuffers.Table
 */
layout<T extends flatbuffers.Table>(obj:T):T|null {
  var offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__union(obj, this.bb_pos + offset) : null;
};

/**
 * @param flatbuffers.Builder builder
 */
static startPublishing(builder:flatbuffers.Builder) {
  builder.startObject(3);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset metadataOffset
 */
static addMetadata(builder:flatbuffers.Builder, metadataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, metadataOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param Layout layoutType
 */
static addLayoutType(builder:flatbuffers.Builder, layoutType:Layout) {
  builder.addFieldInt8(1, layoutType, Layout.NONE);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset layoutOffset
 */
static addLayout(builder:flatbuffers.Builder, layoutOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, layoutOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endPublishing(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

}
/**
 * @constructor
 */
export class Album {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns Album
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Album {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param Album= obj
 * @returns Album
 */
static getRootAsAlbum(bb:flatbuffers.ByteBuffer, obj?:Album):Album {
  return (obj || new Album).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @returns boolean
 */
static bufferHasIdentifier(bb:flatbuffers.ByteBuffer):boolean {
  return bb.__has_identifier('DALN');
};

/**
 * @param Metadata= obj
 * @returns Metadata|null
 */
metadata(obj?:Metadata):Metadata|null {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new Metadata).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
};

/**
 * @param number index
 * @param Entity= obj
 * @returns Entity
 */
entity(index: number, obj?:Entity):Entity|null {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new Entity).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
};

/**
 * @returns number
 */
entityLength():number {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param number index
 * @param Speech= obj
 * @returns Speech
 */
speech(index: number, obj?:Speech):Speech|null {
  var offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? (obj || new Speech).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
};

/**
 * @returns number
 */
speechLength():number {
  var offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param number index
 * @param Illustration= obj
 * @returns Illustration
 */
illustration(index: number, obj?:Illustration):Illustration|null {
  var offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? (obj || new Illustration).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
};

/**
 * @returns number
 */
illustrationLength():number {
  var offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param number index
 * @param Shape= obj
 * @returns Shape
 */
shape(index: number, obj?:Shape):Shape|null {
  var offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? (obj || new Shape).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
};

/**
 * @returns number
 */
shapeLength():number {
  var offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param number index
 * @param Panel= obj
 * @returns Panel
 */
panel(index: number, obj?:Panel):Panel|null {
  var offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? (obj || new Panel).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
};

/**
 * @returns number
 */
panelLength():number {
  var offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param number index
 * @param Publishing= obj
 * @returns Publishing
 */
publishing(index: number, obj?:Publishing):Publishing|null {
  var offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? (obj || new Publishing).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
};

/**
 * @returns number
 */
publishingLength():number {
  var offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param flatbuffers.Builder builder
 */
static startAlbum(builder:flatbuffers.Builder) {
  builder.startObject(7);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset metadataOffset
 */
static addMetadata(builder:flatbuffers.Builder, metadataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, metadataOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset entityOffset
 */
static addEntity(builder:flatbuffers.Builder, entityOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, entityOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param Array.<flatbuffers.Offset> data
 * @returns flatbuffers.Offset
 */
static createEntityVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param flatbuffers.Builder builder
 * @param number numElems
 */
static startEntityVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset speechOffset
 */
static addSpeech(builder:flatbuffers.Builder, speechOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, speechOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param Array.<flatbuffers.Offset> data
 * @returns flatbuffers.Offset
 */
static createSpeechVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param flatbuffers.Builder builder
 * @param number numElems
 */
static startSpeechVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset illustrationOffset
 */
static addIllustration(builder:flatbuffers.Builder, illustrationOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, illustrationOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param Array.<flatbuffers.Offset> data
 * @returns flatbuffers.Offset
 */
static createIllustrationVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param flatbuffers.Builder builder
 * @param number numElems
 */
static startIllustrationVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset shapeOffset
 */
static addShape(builder:flatbuffers.Builder, shapeOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, shapeOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param Array.<flatbuffers.Offset> data
 * @returns flatbuffers.Offset
 */
static createShapeVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param flatbuffers.Builder builder
 * @param number numElems
 */
static startShapeVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset panelOffset
 */
static addPanel(builder:flatbuffers.Builder, panelOffset:flatbuffers.Offset) {
  builder.addFieldOffset(5, panelOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param Array.<flatbuffers.Offset> data
 * @returns flatbuffers.Offset
 */
static createPanelVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param flatbuffers.Builder builder
 * @param number numElems
 */
static startPanelVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset publishingOffset
 */
static addPublishing(builder:flatbuffers.Builder, publishingOffset:flatbuffers.Offset) {
  builder.addFieldOffset(6, publishingOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param Array.<flatbuffers.Offset> data
 * @returns flatbuffers.Offset
 */
static createPublishingVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param flatbuffers.Builder builder
 * @param number numElems
 */
static startPublishingVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endAlbum(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset offset
 */
static finishAlbumBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {
  builder.finish(offset, 'DALN');
};

}
