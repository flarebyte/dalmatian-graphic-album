// automatically generated by the FlatBuffers compiler, do not modify
// tslint:disable

import { flatbuffers } from "flatbuffers"
/**
 * @enum
 */
export namespace Dalmatian{
export enum Draw{
  NONE= 0,
  MoveTo= 1,
  LineTo= 2,
  Horizontal= 3,
  Vertical= 4,
  CubicCurve= 5,
  SmoothCubicCurve= 6,
  QuadraticCurve= 7,
  SmoothQuadraticCurve= 8
}};

/**
 * @enum
 */
export namespace Dalmatian{
export enum LayerData{
  NONE= 0,
  VectorialLayer= 1,
  RawLayer8= 2,
  RawLayer16= 3,
  RawLayer32= 4,
  RawLayer64= 5,
  Raw2DLayer8= 6,
  Raw2DLayer16= 7,
  Raw2DLayer32= 8,
  Raw2DLayer64= 9
}};

/**
 * @constructor
 */
export namespace Dalmatian{
export class Dimension2D {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns Dimension2D
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Dimension2D {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @returns number
 */
width():number {
  return this.bb!.readUint32(this.bb_pos);
};

/**
 * @returns number
 */
height():number {
  return this.bb!.readUint32(this.bb_pos + 4);
};

/**
 * @param flatbuffers.Builder builder
 * @param number width
 * @param number height
 * @returns flatbuffers.Offset
 */
static createDimension2D(builder:flatbuffers.Builder, width: number, height: number):flatbuffers.Offset {
  builder.prep(4, 8);
  builder.writeInt32(height);
  builder.writeInt32(width);
  return builder.offset();
};

}
}
/**
 * @constructor
 */
export namespace Dalmatian{
export class MoveTo {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns MoveTo
 */
__init(i:number, bb:flatbuffers.ByteBuffer):MoveTo {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @returns number
 */
x():number {
  return this.bb!.readUint32(this.bb_pos);
};

/**
 * @returns number
 */
y():number {
  return this.bb!.readUint32(this.bb_pos + 4);
};

/**
 * @param flatbuffers.Builder builder
 * @param number x
 * @param number y
 * @returns flatbuffers.Offset
 */
static createMoveTo(builder:flatbuffers.Builder, x: number, y: number):flatbuffers.Offset {
  builder.prep(4, 8);
  builder.writeInt32(y);
  builder.writeInt32(x);
  return builder.offset();
};

}
}
/**
 * @constructor
 */
export namespace Dalmatian{
export class LineTo {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns LineTo
 */
__init(i:number, bb:flatbuffers.ByteBuffer):LineTo {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @returns number
 */
x():number {
  return this.bb!.readUint32(this.bb_pos);
};

/**
 * @returns number
 */
y():number {
  return this.bb!.readUint32(this.bb_pos + 4);
};

/**
 * @param flatbuffers.Builder builder
 * @param number x
 * @param number y
 * @returns flatbuffers.Offset
 */
static createLineTo(builder:flatbuffers.Builder, x: number, y: number):flatbuffers.Offset {
  builder.prep(4, 8);
  builder.writeInt32(y);
  builder.writeInt32(x);
  return builder.offset();
};

}
}
/**
 * @constructor
 */
export namespace Dalmatian{
export class Horizontal {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns Horizontal
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Horizontal {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @returns number
 */
x():number {
  return this.bb!.readUint32(this.bb_pos);
};

/**
 * @param flatbuffers.Builder builder
 * @param number x
 * @returns flatbuffers.Offset
 */
static createHorizontal(builder:flatbuffers.Builder, x: number):flatbuffers.Offset {
  builder.prep(4, 4);
  builder.writeInt32(x);
  return builder.offset();
};

}
}
/**
 * @constructor
 */
export namespace Dalmatian{
export class Vertical {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns Vertical
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Vertical {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @returns number
 */
y():number {
  return this.bb!.readUint32(this.bb_pos);
};

/**
 * @param flatbuffers.Builder builder
 * @param number y
 * @returns flatbuffers.Offset
 */
static createVertical(builder:flatbuffers.Builder, y: number):flatbuffers.Offset {
  builder.prep(4, 4);
  builder.writeInt32(y);
  return builder.offset();
};

}
}
/**
 * @constructor
 */
export namespace Dalmatian{
export class CubicCurve {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns CubicCurve
 */
__init(i:number, bb:flatbuffers.ByteBuffer):CubicCurve {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @returns number
 */
x1():number {
  return this.bb!.readUint32(this.bb_pos);
};

/**
 * @returns number
 */
y1():number {
  return this.bb!.readUint32(this.bb_pos + 4);
};

/**
 * @returns number
 */
x2():number {
  return this.bb!.readUint32(this.bb_pos + 8);
};

/**
 * @returns number
 */
y2():number {
  return this.bb!.readUint32(this.bb_pos + 12);
};

/**
 * @returns number
 */
x():number {
  return this.bb!.readUint32(this.bb_pos + 16);
};

/**
 * @returns number
 */
y():number {
  return this.bb!.readUint32(this.bb_pos + 20);
};

/**
 * @param flatbuffers.Builder builder
 * @param number x1
 * @param number y1
 * @param number x2
 * @param number y2
 * @param number x
 * @param number y
 * @returns flatbuffers.Offset
 */
static createCubicCurve(builder:flatbuffers.Builder, x1: number, y1: number, x2: number, y2: number, x: number, y: number):flatbuffers.Offset {
  builder.prep(4, 24);
  builder.writeInt32(y);
  builder.writeInt32(x);
  builder.writeInt32(y2);
  builder.writeInt32(x2);
  builder.writeInt32(y1);
  builder.writeInt32(x1);
  return builder.offset();
};

}
}
/**
 * @constructor
 */
export namespace Dalmatian{
export class SmoothCubicCurve {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns SmoothCubicCurve
 */
__init(i:number, bb:flatbuffers.ByteBuffer):SmoothCubicCurve {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @returns number
 */
x2():number {
  return this.bb!.readUint32(this.bb_pos);
};

/**
 * @returns number
 */
y2():number {
  return this.bb!.readUint32(this.bb_pos + 4);
};

/**
 * @returns number
 */
x():number {
  return this.bb!.readUint32(this.bb_pos + 8);
};

/**
 * @returns number
 */
y():number {
  return this.bb!.readUint32(this.bb_pos + 12);
};

/**
 * @param flatbuffers.Builder builder
 * @param number x2
 * @param number y2
 * @param number x
 * @param number y
 * @returns flatbuffers.Offset
 */
static createSmoothCubicCurve(builder:flatbuffers.Builder, x2: number, y2: number, x: number, y: number):flatbuffers.Offset {
  builder.prep(4, 16);
  builder.writeInt32(y);
  builder.writeInt32(x);
  builder.writeInt32(y2);
  builder.writeInt32(x2);
  return builder.offset();
};

}
}
/**
 * @constructor
 */
export namespace Dalmatian{
export class QuadraticCurve {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns QuadraticCurve
 */
__init(i:number, bb:flatbuffers.ByteBuffer):QuadraticCurve {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @returns number
 */
x1():number {
  return this.bb!.readUint32(this.bb_pos);
};

/**
 * @returns number
 */
y1():number {
  return this.bb!.readUint32(this.bb_pos + 4);
};

/**
 * @returns number
 */
x():number {
  return this.bb!.readUint32(this.bb_pos + 8);
};

/**
 * @returns number
 */
y():number {
  return this.bb!.readUint32(this.bb_pos + 12);
};

/**
 * @param flatbuffers.Builder builder
 * @param number x1
 * @param number y1
 * @param number x
 * @param number y
 * @returns flatbuffers.Offset
 */
static createQuadraticCurve(builder:flatbuffers.Builder, x1: number, y1: number, x: number, y: number):flatbuffers.Offset {
  builder.prep(4, 16);
  builder.writeInt32(y);
  builder.writeInt32(x);
  builder.writeInt32(y1);
  builder.writeInt32(x1);
  return builder.offset();
};

}
}
/**
 * @constructor
 */
export namespace Dalmatian{
export class SmoothQuadraticCurve {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns SmoothQuadraticCurve
 */
__init(i:number, bb:flatbuffers.ByteBuffer):SmoothQuadraticCurve {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @returns number
 */
x():number {
  return this.bb!.readUint32(this.bb_pos);
};

/**
 * @returns number
 */
y():number {
  return this.bb!.readUint32(this.bb_pos + 4);
};

/**
 * @param flatbuffers.Builder builder
 * @param number x
 * @param number y
 * @returns flatbuffers.Offset
 */
static createSmoothQuadraticCurve(builder:flatbuffers.Builder, x: number, y: number):flatbuffers.Offset {
  builder.prep(4, 8);
  builder.writeInt32(y);
  builder.writeInt32(x);
  return builder.offset();
};

}
}
/**
 * @constructor
 */
export namespace Dalmatian{
export class ArrayOfU64 {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns ArrayOfU64
 */
__init(i:number, bb:flatbuffers.ByteBuffer):ArrayOfU64 {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param ArrayOfU64= obj
 * @returns ArrayOfU64
 */
static getRootAsArrayOfU64(bb:flatbuffers.ByteBuffer, obj?:ArrayOfU64):ArrayOfU64 {
  return (obj || new ArrayOfU64).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param number index
 * @returns flatbuffers.Long
 */
data(index: number):flatbuffers.Long|null {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readUint64(this.bb!.__vector(this.bb_pos + offset) + index * 8) : this.bb!.createLong(0, 0);
};

/**
 * @returns number
 */
dataLength():number {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param flatbuffers.Builder builder
 */
static startArrayOfU64(builder:flatbuffers.Builder) {
  builder.startObject(1);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset dataOffset
 */
static addData(builder:flatbuffers.Builder, dataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, dataOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param Array.<flatbuffers.Long> data
 * @returns flatbuffers.Offset
 */
static createDataVector(builder:flatbuffers.Builder, data:flatbuffers.Long[]):flatbuffers.Offset {
  builder.startVector(8, data.length, 8);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt64(data[i]);
  }
  return builder.endVector();
};

/**
 * @param flatbuffers.Builder builder
 * @param number numElems
 */
static startDataVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(8, numElems, 8);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endArrayOfU64(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

}
}
/**
 * @constructor
 */
export namespace Dalmatian{
export class ArrayOfU32 {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns ArrayOfU32
 */
__init(i:number, bb:flatbuffers.ByteBuffer):ArrayOfU32 {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param ArrayOfU32= obj
 * @returns ArrayOfU32
 */
static getRootAsArrayOfU32(bb:flatbuffers.ByteBuffer, obj?:ArrayOfU32):ArrayOfU32 {
  return (obj || new ArrayOfU32).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param number index
 * @returns number
 */
data(index: number):number|null {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readUint32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;
};

/**
 * @returns number
 */
dataLength():number {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns Uint32Array
 */
dataArray():Uint32Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? new Uint32Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param flatbuffers.Builder builder
 */
static startArrayOfU32(builder:flatbuffers.Builder) {
  builder.startObject(1);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset dataOffset
 */
static addData(builder:flatbuffers.Builder, dataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, dataOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param Array.<number> data
 * @returns flatbuffers.Offset
 */
static createDataVector(builder:flatbuffers.Builder, data:number[] | Uint8Array):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt32(data[i]);
  }
  return builder.endVector();
};

/**
 * @param flatbuffers.Builder builder
 * @param number numElems
 */
static startDataVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endArrayOfU32(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

}
}
/**
 * @constructor
 */
export namespace Dalmatian{
export class ArrayOfU16 {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns ArrayOfU16
 */
__init(i:number, bb:flatbuffers.ByteBuffer):ArrayOfU16 {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param ArrayOfU16= obj
 * @returns ArrayOfU16
 */
static getRootAsArrayOfU16(bb:flatbuffers.ByteBuffer, obj?:ArrayOfU16):ArrayOfU16 {
  return (obj || new ArrayOfU16).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param number index
 * @returns number
 */
data(index: number):number|null {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readUint16(this.bb!.__vector(this.bb_pos + offset) + index * 2) : 0;
};

/**
 * @returns number
 */
dataLength():number {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns Uint16Array
 */
dataArray():Uint16Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? new Uint16Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param flatbuffers.Builder builder
 */
static startArrayOfU16(builder:flatbuffers.Builder) {
  builder.startObject(1);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset dataOffset
 */
static addData(builder:flatbuffers.Builder, dataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, dataOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param Array.<number> data
 * @returns flatbuffers.Offset
 */
static createDataVector(builder:flatbuffers.Builder, data:number[] | Uint8Array):flatbuffers.Offset {
  builder.startVector(2, data.length, 2);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt16(data[i]);
  }
  return builder.endVector();
};

/**
 * @param flatbuffers.Builder builder
 * @param number numElems
 */
static startDataVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(2, numElems, 2);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endArrayOfU16(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

}
}
/**
 * @constructor
 */
export namespace Dalmatian{
export class ArrayOfU8 {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns ArrayOfU8
 */
__init(i:number, bb:flatbuffers.ByteBuffer):ArrayOfU8 {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param ArrayOfU8= obj
 * @returns ArrayOfU8
 */
static getRootAsArrayOfU8(bb:flatbuffers.ByteBuffer, obj?:ArrayOfU8):ArrayOfU8 {
  return (obj || new ArrayOfU8).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param number index
 * @returns number
 */
data(index: number):number|null {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readUint8(this.bb!.__vector(this.bb_pos + offset) + index) : 0;
};

/**
 * @returns number
 */
dataLength():number {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns Uint8Array
 */
dataArray():Uint8Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? new Uint8Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param flatbuffers.Builder builder
 */
static startArrayOfU8(builder:flatbuffers.Builder) {
  builder.startObject(1);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset dataOffset
 */
static addData(builder:flatbuffers.Builder, dataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, dataOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param Array.<number> data
 * @returns flatbuffers.Offset
 */
static createDataVector(builder:flatbuffers.Builder, data:number[] | Uint8Array):flatbuffers.Offset {
  builder.startVector(1, data.length, 1);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt8(data[i]);
  }
  return builder.endVector();
};

/**
 * @param flatbuffers.Builder builder
 * @param number numElems
 */
static startDataVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(1, numElems, 1);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endArrayOfU8(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

}
}
/**
 * @constructor
 */
export namespace Dalmatian{
export class IRIMeta {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns IRIMeta
 */
__init(i:number, bb:flatbuffers.ByteBuffer):IRIMeta {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param IRIMeta= obj
 * @returns IRIMeta
 */
static getRootAsIRIMeta(bb:flatbuffers.ByteBuffer, obj?:IRIMeta):IRIMeta {
  return (obj || new IRIMeta).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns number
 */
id():number {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt8(this.bb_pos + offset) : 0;
};

/**
 * @param flatbuffers.Encoding= optionalEncoding
 * @returns string|Uint8Array|null
 */
prefix():string|null
prefix(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
prefix(optionalEncoding?:any):string|Uint8Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param flatbuffers.Encoding= optionalEncoding
 * @returns string|Uint8Array|null
 */
suffix():string|null
suffix(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
suffix(optionalEncoding?:any):string|Uint8Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param flatbuffers.Encoding= optionalEncoding
 * @returns string|Uint8Array|null
 */
mediaType():string|null
mediaType(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
mediaType(optionalEncoding?:any):string|Uint8Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param flatbuffers.Encoding= optionalEncoding
 * @returns string|Uint8Array|null
 */
language():string|null
language(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
language(optionalEncoding?:any):string|Uint8Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param flatbuffers.Builder builder
 */
static startIRIMeta(builder:flatbuffers.Builder) {
  builder.startObject(5);
};

/**
 * @param flatbuffers.Builder builder
 * @param number id
 */
static addId(builder:flatbuffers.Builder, id:number) {
  builder.addFieldInt8(0, id, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset prefixOffset
 */
static addPrefix(builder:flatbuffers.Builder, prefixOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, prefixOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset suffixOffset
 */
static addSuffix(builder:flatbuffers.Builder, suffixOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, suffixOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset mediaTypeOffset
 */
static addMediaType(builder:flatbuffers.Builder, mediaTypeOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, mediaTypeOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset languageOffset
 */
static addLanguage(builder:flatbuffers.Builder, languageOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, languageOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endIRIMeta(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

}
}
/**
 * @constructor
 */
export namespace Dalmatian{
export class IRI {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns IRI
 */
__init(i:number, bb:flatbuffers.ByteBuffer):IRI {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param IRI= obj
 * @returns IRI
 */
static getRootAsIRI(bb:flatbuffers.ByteBuffer, obj?:IRI):IRI {
  return (obj || new IRI).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param flatbuffers.Encoding= optionalEncoding
 * @returns string|Uint8Array|null
 */
path():string|null
path(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
path(optionalEncoding?:any):string|Uint8Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @returns number
 */
metaId():number {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt8(this.bb_pos + offset) : 0;
};

/**
 * @param flatbuffers.Builder builder
 */
static startIRI(builder:flatbuffers.Builder) {
  builder.startObject(2);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset pathOffset
 */
static addPath(builder:flatbuffers.Builder, pathOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, pathOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param number metaId
 */
static addMetaId(builder:flatbuffers.Builder, metaId:number) {
  builder.addFieldInt8(1, metaId, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endIRI(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

}
}
/**
 * @constructor
 */
export namespace Dalmatian{
export class Hyperlink {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns Hyperlink
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Hyperlink {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param Hyperlink= obj
 * @returns Hyperlink
 */
static getRootAsHyperlink(bb:flatbuffers.ByteBuffer, obj?:Hyperlink):Hyperlink {
  return (obj || new Hyperlink).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param flatbuffers.Encoding= optionalEncoding
 * @returns string|Uint8Array|null
 */
text():string|null
text(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
text(optionalEncoding?:any):string|Uint8Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param Dalmatian.IRI= obj
 * @returns Dalmatian.IRI|null
 */
iri(obj?:Dalmatian.IRI):Dalmatian.IRI|null {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new Dalmatian.IRI).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
};

/**
 * @param flatbuffers.Builder builder
 */
static startHyperlink(builder:flatbuffers.Builder) {
  builder.startObject(2);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset textOffset
 */
static addText(builder:flatbuffers.Builder, textOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, textOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset iriOffset
 */
static addIri(builder:flatbuffers.Builder, iriOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, iriOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endHyperlink(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

}
}
/**
 * @constructor
 */
export namespace Dalmatian{
export class Relation {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns Relation
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Relation {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param Relation= obj
 * @returns Relation
 */
static getRootAsRelation(bb:flatbuffers.ByteBuffer, obj?:Relation):Relation {
  return (obj || new Relation).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param Dalmatian.IRI= obj
 * @returns Dalmatian.IRI|null
 */
predicate(obj?:Dalmatian.IRI):Dalmatian.IRI|null {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new Dalmatian.IRI).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
};

/**
 * @param Dalmatian.IRI= obj
 * @returns Dalmatian.IRI|null
 */
resource(obj?:Dalmatian.IRI):Dalmatian.IRI|null {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new Dalmatian.IRI).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
};

/**
 * @param flatbuffers.Builder builder
 */
static startRelation(builder:flatbuffers.Builder) {
  builder.startObject(2);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset predicateOffset
 */
static addPredicate(builder:flatbuffers.Builder, predicateOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, predicateOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset resourceOffset
 */
static addResource(builder:flatbuffers.Builder, resourceOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, resourceOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endRelation(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

}
}
/**
 * @constructor
 */
export namespace Dalmatian{
export class Metadata {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns Metadata
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Metadata {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param Metadata= obj
 * @returns Metadata
 */
static getRootAsMetadata(bb:flatbuffers.ByteBuffer, obj?:Metadata):Metadata {
  return (obj || new Metadata).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param Dalmatian.IRI= obj
 * @returns Dalmatian.IRI|null
 */
identifier(obj?:Dalmatian.IRI):Dalmatian.IRI|null {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new Dalmatian.IRI).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
};

/**
 * @param Dalmatian.IRI= obj
 * @returns Dalmatian.IRI|null
 */
version(obj?:Dalmatian.IRI):Dalmatian.IRI|null {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new Dalmatian.IRI).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
};

/**
 * @param flatbuffers.Encoding= optionalEncoding
 * @returns string|Uint8Array|null
 */
language():string|null
language(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
language(optionalEncoding?:any):string|Uint8Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param Dalmatian.Dimension2D= obj
 * @returns Dalmatian.Dimension2D|null
 */
dimension(obj?:Dalmatian.Dimension2D):Dalmatian.Dimension2D|null {
  var offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? (obj || new Dalmatian.Dimension2D).__init(this.bb_pos + offset, this.bb!) : null;
};

/**
 * @returns number
 */
dpi():number {
  var offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.readUint16(this.bb_pos + offset) : 0;
};

/**
 * @param Dalmatian.Hyperlink= obj
 * @returns Dalmatian.Hyperlink|null
 */
title(obj?:Dalmatian.Hyperlink):Dalmatian.Hyperlink|null {
  var offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? (obj || new Dalmatian.Hyperlink).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
};

/**
 * @param Dalmatian.Hyperlink= obj
 * @returns Dalmatian.Hyperlink|null
 */
description(obj?:Dalmatian.Hyperlink):Dalmatian.Hyperlink|null {
  var offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? (obj || new Dalmatian.Hyperlink).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
};

/**
 * @param number index
 * @param Dalmatian.Hyperlink= obj
 * @returns Dalmatian.Hyperlink
 */
creator(index: number, obj?:Dalmatian.Hyperlink):Dalmatian.Hyperlink|null {
  var offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? (obj || new Dalmatian.Hyperlink).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
};

/**
 * @returns number
 */
creatorLength():number {
  var offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param number index
 * @param Dalmatian.Hyperlink= obj
 * @returns Dalmatian.Hyperlink
 */
contributor(index: number, obj?:Dalmatian.Hyperlink):Dalmatian.Hyperlink|null {
  var offset = this.bb!.__offset(this.bb_pos, 20);
  return offset ? (obj || new Dalmatian.Hyperlink).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
};

/**
 * @returns number
 */
contributorLength():number {
  var offset = this.bb!.__offset(this.bb_pos, 20);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param number index
 * @param Dalmatian.Hyperlink= obj
 * @returns Dalmatian.Hyperlink
 */
publisher(index: number, obj?:Dalmatian.Hyperlink):Dalmatian.Hyperlink|null {
  var offset = this.bb!.__offset(this.bb_pos, 22);
  return offset ? (obj || new Dalmatian.Hyperlink).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
};

/**
 * @returns number
 */
publisherLength():number {
  var offset = this.bb!.__offset(this.bb_pos, 22);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param Dalmatian.Hyperlink= obj
 * @returns Dalmatian.Hyperlink|null
 */
license(obj?:Dalmatian.Hyperlink):Dalmatian.Hyperlink|null {
  var offset = this.bb!.__offset(this.bb_pos, 24);
  return offset ? (obj || new Dalmatian.Hyperlink).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
};

/**
 * @param Dalmatian.Hyperlink= obj
 * @returns Dalmatian.Hyperlink|null
 */
rights(obj?:Dalmatian.Hyperlink):Dalmatian.Hyperlink|null {
  var offset = this.bb!.__offset(this.bb_pos, 26);
  return offset ? (obj || new Dalmatian.Hyperlink).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
};

/**
 * @param Dalmatian.Hyperlink= obj
 * @returns Dalmatian.Hyperlink|null
 */
attribution(obj?:Dalmatian.Hyperlink):Dalmatian.Hyperlink|null {
  var offset = this.bb!.__offset(this.bb_pos, 28);
  return offset ? (obj || new Dalmatian.Hyperlink).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
};

/**
 * @param flatbuffers.Encoding= optionalEncoding
 * @returns string|Uint8Array|null
 */
created():string|null
created(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
created(optionalEncoding?:any):string|Uint8Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 30);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param flatbuffers.Encoding= optionalEncoding
 * @returns string|Uint8Array|null
 */
modified():string|null
modified(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
modified(optionalEncoding?:any):string|Uint8Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 32);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param number index
 * @param Dalmatian.Relation= obj
 * @returns Dalmatian.Relation
 */
related(index: number, obj?:Dalmatian.Relation):Dalmatian.Relation|null {
  var offset = this.bb!.__offset(this.bb_pos, 34);
  return offset ? (obj || new Dalmatian.Relation).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
};

/**
 * @returns number
 */
relatedLength():number {
  var offset = this.bb!.__offset(this.bb_pos, 34);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param flatbuffers.Builder builder
 */
static startMetadata(builder:flatbuffers.Builder) {
  builder.startObject(16);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset identifierOffset
 */
static addIdentifier(builder:flatbuffers.Builder, identifierOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, identifierOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset versionOffset
 */
static addVersion(builder:flatbuffers.Builder, versionOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, versionOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset languageOffset
 */
static addLanguage(builder:flatbuffers.Builder, languageOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, languageOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset dimensionOffset
 */
static addDimension(builder:flatbuffers.Builder, dimensionOffset:flatbuffers.Offset) {
  builder.addFieldStruct(3, dimensionOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param number dpi
 */
static addDpi(builder:flatbuffers.Builder, dpi:number) {
  builder.addFieldInt16(4, dpi, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset titleOffset
 */
static addTitle(builder:flatbuffers.Builder, titleOffset:flatbuffers.Offset) {
  builder.addFieldOffset(5, titleOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset descriptionOffset
 */
static addDescription(builder:flatbuffers.Builder, descriptionOffset:flatbuffers.Offset) {
  builder.addFieldOffset(6, descriptionOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset creatorOffset
 */
static addCreator(builder:flatbuffers.Builder, creatorOffset:flatbuffers.Offset) {
  builder.addFieldOffset(7, creatorOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param Array.<flatbuffers.Offset> data
 * @returns flatbuffers.Offset
 */
static createCreatorVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param flatbuffers.Builder builder
 * @param number numElems
 */
static startCreatorVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset contributorOffset
 */
static addContributor(builder:flatbuffers.Builder, contributorOffset:flatbuffers.Offset) {
  builder.addFieldOffset(8, contributorOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param Array.<flatbuffers.Offset> data
 * @returns flatbuffers.Offset
 */
static createContributorVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param flatbuffers.Builder builder
 * @param number numElems
 */
static startContributorVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset publisherOffset
 */
static addPublisher(builder:flatbuffers.Builder, publisherOffset:flatbuffers.Offset) {
  builder.addFieldOffset(9, publisherOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param Array.<flatbuffers.Offset> data
 * @returns flatbuffers.Offset
 */
static createPublisherVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param flatbuffers.Builder builder
 * @param number numElems
 */
static startPublisherVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset licenseOffset
 */
static addLicense(builder:flatbuffers.Builder, licenseOffset:flatbuffers.Offset) {
  builder.addFieldOffset(10, licenseOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset rightsOffset
 */
static addRights(builder:flatbuffers.Builder, rightsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(11, rightsOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset attributionOffset
 */
static addAttribution(builder:flatbuffers.Builder, attributionOffset:flatbuffers.Offset) {
  builder.addFieldOffset(12, attributionOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset createdOffset
 */
static addCreated(builder:flatbuffers.Builder, createdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(13, createdOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset modifiedOffset
 */
static addModified(builder:flatbuffers.Builder, modifiedOffset:flatbuffers.Offset) {
  builder.addFieldOffset(14, modifiedOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset relatedOffset
 */
static addRelated(builder:flatbuffers.Builder, relatedOffset:flatbuffers.Offset) {
  builder.addFieldOffset(15, relatedOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param Array.<flatbuffers.Offset> data
 * @returns flatbuffers.Offset
 */
static createRelatedVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param flatbuffers.Builder builder
 * @param number numElems
 */
static startRelatedVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endMetadata(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

}
}
/**
 * @constructor
 */
export namespace Dalmatian{
export class Color {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns Color
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Color {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param Color= obj
 * @returns Color
 */
static getRootAsColor(bb:flatbuffers.ByteBuffer, obj?:Color):Color {
  return (obj || new Color).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns number
 */
id():number {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt8(this.bb_pos + offset) : 0;
};

/**
 * @param Dalmatian.Hyperlink= obj
 * @returns Dalmatian.Hyperlink|null
 */
name(obj?:Dalmatian.Hyperlink):Dalmatian.Hyperlink|null {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new Dalmatian.Hyperlink).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
};

/**
 * @param Dalmatian.Hyperlink= obj
 * @returns Dalmatian.Hyperlink|null
 */
colorSpace(obj?:Dalmatian.Hyperlink):Dalmatian.Hyperlink|null {
  var offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? (obj || new Dalmatian.Hyperlink).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
};

/**
 * @param flatbuffers.Encoding= optionalEncoding
 * @returns string|Uint8Array|null
 */
value():string|null
value(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
value(optionalEncoding?:any):string|Uint8Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param flatbuffers.Builder builder
 */
static startColor(builder:flatbuffers.Builder) {
  builder.startObject(4);
};

/**
 * @param flatbuffers.Builder builder
 * @param number id
 */
static addId(builder:flatbuffers.Builder, id:number) {
  builder.addFieldInt8(0, id, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset nameOffset
 */
static addName(builder:flatbuffers.Builder, nameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, nameOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset colorSpaceOffset
 */
static addColorSpace(builder:flatbuffers.Builder, colorSpaceOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, colorSpaceOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset valueOffset
 */
static addValue(builder:flatbuffers.Builder, valueOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, valueOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endColor(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

}
}
/**
 * @constructor
 */
export namespace Dalmatian{
export class Processor {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns Processor
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Processor {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param Processor= obj
 * @returns Processor
 */
static getRootAsProcessor(bb:flatbuffers.ByteBuffer, obj?:Processor):Processor {
  return (obj || new Processor).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns number
 */
id():number {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt8(this.bb_pos + offset) : 0;
};

/**
 * @param Dalmatian.Hyperlink= obj
 * @returns Dalmatian.Hyperlink|null
 */
name(obj?:Dalmatian.Hyperlink):Dalmatian.Hyperlink|null {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new Dalmatian.Hyperlink).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
};

/**
 * @param Dalmatian.Hyperlink= obj
 * @returns Dalmatian.Hyperlink|null
 */
version(obj?:Dalmatian.Hyperlink):Dalmatian.Hyperlink|null {
  var offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? (obj || new Dalmatian.Hyperlink).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
};

/**
 * @param flatbuffers.Builder builder
 */
static startProcessor(builder:flatbuffers.Builder) {
  builder.startObject(3);
};

/**
 * @param flatbuffers.Builder builder
 * @param number id
 */
static addId(builder:flatbuffers.Builder, id:number) {
  builder.addFieldInt8(0, id, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset nameOffset
 */
static addName(builder:flatbuffers.Builder, nameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, nameOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset versionOffset
 */
static addVersion(builder:flatbuffers.Builder, versionOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, versionOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endProcessor(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

}
}
/**
 * @constructor
 */
export namespace Dalmatian{
export class Script {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns Script
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Script {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param Script= obj
 * @returns Script
 */
static getRootAsScript(bb:flatbuffers.ByteBuffer, obj?:Script):Script {
  return (obj || new Script).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns number
 */
id():number {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readUint16(this.bb_pos + offset) : 0;
};

/**
 * @returns number
 */
processorId():number {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt8(this.bb_pos + offset) : 0;
};

/**
 * @param flatbuffers.Encoding= optionalEncoding
 * @returns string|Uint8Array|null
 */
code():string|null
code(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
code(optionalEncoding?:any):string|Uint8Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param flatbuffers.Builder builder
 */
static startScript(builder:flatbuffers.Builder) {
  builder.startObject(3);
};

/**
 * @param flatbuffers.Builder builder
 * @param number id
 */
static addId(builder:flatbuffers.Builder, id:number) {
  builder.addFieldInt16(0, id, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param number processorId
 */
static addProcessorId(builder:flatbuffers.Builder, processorId:number) {
  builder.addFieldInt8(1, processorId, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset codeOffset
 */
static addCode(builder:flatbuffers.Builder, codeOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, codeOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endScript(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

}
}
/**
 * @constructor
 */
export namespace Dalmatian{
export class Effect {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns Effect
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Effect {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param Effect= obj
 * @returns Effect
 */
static getRootAsEffect(bb:flatbuffers.ByteBuffer, obj?:Effect):Effect {
  return (obj || new Effect).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns number
 */
id():number {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readUint16(this.bb_pos + offset) : 0;
};

/**
 * @returns number
 */
beforeScriptId():number {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readUint16(this.bb_pos + offset) : 0;
};

/**
 * @returns number
 */
mainScriptId():number {
  var offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readUint16(this.bb_pos + offset) : 0;
};

/**
 * @returns number
 */
afterScriptId():number {
  var offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readUint16(this.bb_pos + offset) : 0;
};

/**
 * @param number index
 * @param Dalmatian.Relation= obj
 * @returns Dalmatian.Relation
 */
related(index: number, obj?:Dalmatian.Relation):Dalmatian.Relation|null {
  var offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? (obj || new Dalmatian.Relation).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
};

/**
 * @returns number
 */
relatedLength():number {
  var offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param flatbuffers.Builder builder
 */
static startEffect(builder:flatbuffers.Builder) {
  builder.startObject(5);
};

/**
 * @param flatbuffers.Builder builder
 * @param number id
 */
static addId(builder:flatbuffers.Builder, id:number) {
  builder.addFieldInt16(0, id, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param number beforeScriptId
 */
static addBeforeScriptId(builder:flatbuffers.Builder, beforeScriptId:number) {
  builder.addFieldInt16(1, beforeScriptId, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param number mainScriptId
 */
static addMainScriptId(builder:flatbuffers.Builder, mainScriptId:number) {
  builder.addFieldInt16(2, mainScriptId, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param number afterScriptId
 */
static addAfterScriptId(builder:flatbuffers.Builder, afterScriptId:number) {
  builder.addFieldInt16(3, afterScriptId, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset relatedOffset
 */
static addRelated(builder:flatbuffers.Builder, relatedOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, relatedOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param Array.<flatbuffers.Offset> data
 * @returns flatbuffers.Offset
 */
static createRelatedVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param flatbuffers.Builder builder
 * @param number numElems
 */
static startRelatedVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endEffect(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

}
}
/**
 * @constructor
 */
export namespace Dalmatian{
export class Shape {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns Shape
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Shape {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param Shape= obj
 * @returns Shape
 */
static getRootAsShape(bb:flatbuffers.ByteBuffer, obj?:Shape):Shape {
  return (obj || new Shape).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param Dalmatian.IRI= obj
 * @returns Dalmatian.IRI|null
 */
identifier(obj?:Dalmatian.IRI):Dalmatian.IRI|null {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new Dalmatian.IRI).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
};

/**
 * @param Dalmatian.Hyperlink= obj
 * @returns Dalmatian.Hyperlink|null
 */
title(obj?:Dalmatian.Hyperlink):Dalmatian.Hyperlink|null {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new Dalmatian.Hyperlink).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
};

/**
 * @param Dalmatian.Hyperlink= obj
 * @returns Dalmatian.Hyperlink|null
 */
description(obj?:Dalmatian.Hyperlink):Dalmatian.Hyperlink|null {
  var offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? (obj || new Dalmatian.Hyperlink).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
};

/**
 * @param number index
 * @param Dalmatian.Relation= obj
 * @returns Dalmatian.Relation
 */
related(index: number, obj?:Dalmatian.Relation):Dalmatian.Relation|null {
  var offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? (obj || new Dalmatian.Relation).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
};

/**
 * @returns number
 */
relatedLength():number {
  var offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param number index
 * @returns Dalmatian.Draw
 */
drawingType(index: number):Dalmatian.Draw|null {
  var offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? /**  */ (this.bb!.readUint8(this.bb!.__vector(this.bb_pos + offset) + index)) : /**  */ (0);
};

/**
 * @returns number
 */
drawingTypeLength():number {
  var offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns Uint8Array
 */
drawingTypeArray():Uint8Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? new Uint8Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param number index
 * @param flatbuffers.Table= obj
 * @returns ?flatbuffers.Table
 */
drawing<T extends flatbuffers.Table>(index: number, obj:T):T|null {
  var offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.__union(obj, this.bb!.__vector(this.bb_pos + offset) + index * 4) : null;
};

/**
 * @returns number
 */
drawingLength():number {
  var offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param number index
 * @param Dalmatian.Effect= obj
 * @returns Dalmatian.Effect
 */
effect(index: number, obj?:Dalmatian.Effect):Dalmatian.Effect|null {
  var offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? (obj || new Dalmatian.Effect).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
};

/**
 * @returns number
 */
effectLength():number {
  var offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param flatbuffers.Builder builder
 */
static startShape(builder:flatbuffers.Builder) {
  builder.startObject(7);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset identifierOffset
 */
static addIdentifier(builder:flatbuffers.Builder, identifierOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, identifierOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset titleOffset
 */
static addTitle(builder:flatbuffers.Builder, titleOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, titleOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset descriptionOffset
 */
static addDescription(builder:flatbuffers.Builder, descriptionOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, descriptionOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset relatedOffset
 */
static addRelated(builder:flatbuffers.Builder, relatedOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, relatedOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param Array.<flatbuffers.Offset> data
 * @returns flatbuffers.Offset
 */
static createRelatedVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param flatbuffers.Builder builder
 * @param number numElems
 */
static startRelatedVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset drawingTypeOffset
 */
static addDrawingType(builder:flatbuffers.Builder, drawingTypeOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, drawingTypeOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param Array.<Dalmatian.Draw> data
 * @returns flatbuffers.Offset
 */
static createDrawingTypeVector(builder:flatbuffers.Builder, data:Dalmatian.Draw[]):flatbuffers.Offset {
  builder.startVector(1, data.length, 1);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt8(data[i]);
  }
  return builder.endVector();
};

/**
 * @param flatbuffers.Builder builder
 * @param number numElems
 */
static startDrawingTypeVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(1, numElems, 1);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset drawingOffset
 */
static addDrawing(builder:flatbuffers.Builder, drawingOffset:flatbuffers.Offset) {
  builder.addFieldOffset(5, drawingOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param Array.<flatbuffers.Offset> data
 * @returns flatbuffers.Offset
 */
static createDrawingVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param flatbuffers.Builder builder
 * @param number numElems
 */
static startDrawingVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset effectOffset
 */
static addEffect(builder:flatbuffers.Builder, effectOffset:flatbuffers.Offset) {
  builder.addFieldOffset(6, effectOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param Array.<flatbuffers.Offset> data
 * @returns flatbuffers.Offset
 */
static createEffectVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param flatbuffers.Builder builder
 * @param number numElems
 */
static startEffectVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endShape(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

}
}
/**
 * @constructor
 */
export namespace Dalmatian{
export class RawLayerMeta {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns RawLayerMeta
 */
__init(i:number, bb:flatbuffers.ByteBuffer):RawLayerMeta {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param RawLayerMeta= obj
 * @returns RawLayerMeta
 */
static getRootAsRawLayerMeta(bb:flatbuffers.ByteBuffer, obj?:RawLayerMeta):RawLayerMeta {
  return (obj || new RawLayerMeta).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param Dalmatian.Dimension2D= obj
 * @returns Dalmatian.Dimension2D|null
 */
tileDimension(obj?:Dalmatian.Dimension2D):Dalmatian.Dimension2D|null {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new Dalmatian.Dimension2D).__init(this.bb_pos + offset, this.bb!) : null;
};

/**
 * @param Dalmatian.Dimension2D= obj
 * @returns Dalmatian.Dimension2D|null
 */
layerDimension(obj?:Dalmatian.Dimension2D):Dalmatian.Dimension2D|null {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new Dalmatian.Dimension2D).__init(this.bb_pos + offset, this.bb!) : null;
};

/**
 * @returns number
 */
flags():number {
  var offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @param Dalmatian.Hyperlink= obj
 * @returns Dalmatian.Hyperlink|null
 */
encoding(obj?:Dalmatian.Hyperlink):Dalmatian.Hyperlink|null {
  var offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? (obj || new Dalmatian.Hyperlink).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
};

/**
 * @param flatbuffers.Builder builder
 */
static startRawLayerMeta(builder:flatbuffers.Builder) {
  builder.startObject(4);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset tileDimensionOffset
 */
static addTileDimension(builder:flatbuffers.Builder, tileDimensionOffset:flatbuffers.Offset) {
  builder.addFieldStruct(0, tileDimensionOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset layerDimensionOffset
 */
static addLayerDimension(builder:flatbuffers.Builder, layerDimensionOffset:flatbuffers.Offset) {
  builder.addFieldStruct(1, layerDimensionOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param number flags
 */
static addFlags(builder:flatbuffers.Builder, flags:number) {
  builder.addFieldInt32(2, flags, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset encodingOffset
 */
static addEncoding(builder:flatbuffers.Builder, encodingOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, encodingOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endRawLayerMeta(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

}
}
/**
 * @constructor
 */
export namespace Dalmatian{
export class RawLayer64 {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns RawLayer64
 */
__init(i:number, bb:flatbuffers.ByteBuffer):RawLayer64 {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param RawLayer64= obj
 * @returns RawLayer64
 */
static getRootAsRawLayer64(bb:flatbuffers.ByteBuffer, obj?:RawLayer64):RawLayer64 {
  return (obj || new RawLayer64).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param Dalmatian.RawLayerMeta= obj
 * @returns Dalmatian.RawLayerMeta|null
 */
meta(obj?:Dalmatian.RawLayerMeta):Dalmatian.RawLayerMeta|null {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new Dalmatian.RawLayerMeta).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
};

/**
 * @param number index
 * @returns flatbuffers.Long
 */
data(index: number):flatbuffers.Long|null {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readUint64(this.bb!.__vector(this.bb_pos + offset) + index * 8) : this.bb!.createLong(0, 0);
};

/**
 * @returns number
 */
dataLength():number {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param flatbuffers.Builder builder
 */
static startRawLayer64(builder:flatbuffers.Builder) {
  builder.startObject(2);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset metaOffset
 */
static addMeta(builder:flatbuffers.Builder, metaOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, metaOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset dataOffset
 */
static addData(builder:flatbuffers.Builder, dataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, dataOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param Array.<flatbuffers.Long> data
 * @returns flatbuffers.Offset
 */
static createDataVector(builder:flatbuffers.Builder, data:flatbuffers.Long[]):flatbuffers.Offset {
  builder.startVector(8, data.length, 8);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt64(data[i]);
  }
  return builder.endVector();
};

/**
 * @param flatbuffers.Builder builder
 * @param number numElems
 */
static startDataVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(8, numElems, 8);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endRawLayer64(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

}
}
/**
 * @constructor
 */
export namespace Dalmatian{
export class RawLayer32 {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns RawLayer32
 */
__init(i:number, bb:flatbuffers.ByteBuffer):RawLayer32 {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param RawLayer32= obj
 * @returns RawLayer32
 */
static getRootAsRawLayer32(bb:flatbuffers.ByteBuffer, obj?:RawLayer32):RawLayer32 {
  return (obj || new RawLayer32).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param Dalmatian.RawLayerMeta= obj
 * @returns Dalmatian.RawLayerMeta|null
 */
meta(obj?:Dalmatian.RawLayerMeta):Dalmatian.RawLayerMeta|null {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new Dalmatian.RawLayerMeta).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
};

/**
 * @param number index
 * @returns number
 */
data(index: number):number|null {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readUint32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;
};

/**
 * @returns number
 */
dataLength():number {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns Uint32Array
 */
dataArray():Uint32Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? new Uint32Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param flatbuffers.Builder builder
 */
static startRawLayer32(builder:flatbuffers.Builder) {
  builder.startObject(2);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset metaOffset
 */
static addMeta(builder:flatbuffers.Builder, metaOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, metaOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset dataOffset
 */
static addData(builder:flatbuffers.Builder, dataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, dataOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param Array.<number> data
 * @returns flatbuffers.Offset
 */
static createDataVector(builder:flatbuffers.Builder, data:number[] | Uint8Array):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt32(data[i]);
  }
  return builder.endVector();
};

/**
 * @param flatbuffers.Builder builder
 * @param number numElems
 */
static startDataVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endRawLayer32(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

}
}
/**
 * @constructor
 */
export namespace Dalmatian{
export class RawLayer16 {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns RawLayer16
 */
__init(i:number, bb:flatbuffers.ByteBuffer):RawLayer16 {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param RawLayer16= obj
 * @returns RawLayer16
 */
static getRootAsRawLayer16(bb:flatbuffers.ByteBuffer, obj?:RawLayer16):RawLayer16 {
  return (obj || new RawLayer16).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param Dalmatian.RawLayerMeta= obj
 * @returns Dalmatian.RawLayerMeta|null
 */
meta(obj?:Dalmatian.RawLayerMeta):Dalmatian.RawLayerMeta|null {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new Dalmatian.RawLayerMeta).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
};

/**
 * @param number index
 * @returns number
 */
data(index: number):number|null {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readUint16(this.bb!.__vector(this.bb_pos + offset) + index * 2) : 0;
};

/**
 * @returns number
 */
dataLength():number {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns Uint16Array
 */
dataArray():Uint16Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? new Uint16Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param flatbuffers.Builder builder
 */
static startRawLayer16(builder:flatbuffers.Builder) {
  builder.startObject(2);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset metaOffset
 */
static addMeta(builder:flatbuffers.Builder, metaOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, metaOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset dataOffset
 */
static addData(builder:flatbuffers.Builder, dataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, dataOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param Array.<number> data
 * @returns flatbuffers.Offset
 */
static createDataVector(builder:flatbuffers.Builder, data:number[] | Uint8Array):flatbuffers.Offset {
  builder.startVector(2, data.length, 2);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt16(data[i]);
  }
  return builder.endVector();
};

/**
 * @param flatbuffers.Builder builder
 * @param number numElems
 */
static startDataVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(2, numElems, 2);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endRawLayer16(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

}
}
/**
 * @constructor
 */
export namespace Dalmatian{
export class RawLayer8 {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns RawLayer8
 */
__init(i:number, bb:flatbuffers.ByteBuffer):RawLayer8 {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param RawLayer8= obj
 * @returns RawLayer8
 */
static getRootAsRawLayer8(bb:flatbuffers.ByteBuffer, obj?:RawLayer8):RawLayer8 {
  return (obj || new RawLayer8).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param Dalmatian.RawLayerMeta= obj
 * @returns Dalmatian.RawLayerMeta|null
 */
meta(obj?:Dalmatian.RawLayerMeta):Dalmatian.RawLayerMeta|null {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new Dalmatian.RawLayerMeta).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
};

/**
 * @param number index
 * @returns number
 */
data(index: number):number|null {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readUint8(this.bb!.__vector(this.bb_pos + offset) + index) : 0;
};

/**
 * @returns number
 */
dataLength():number {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns Uint8Array
 */
dataArray():Uint8Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? new Uint8Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param flatbuffers.Builder builder
 */
static startRawLayer8(builder:flatbuffers.Builder) {
  builder.startObject(2);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset metaOffset
 */
static addMeta(builder:flatbuffers.Builder, metaOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, metaOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset dataOffset
 */
static addData(builder:flatbuffers.Builder, dataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, dataOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param Array.<number> data
 * @returns flatbuffers.Offset
 */
static createDataVector(builder:flatbuffers.Builder, data:number[] | Uint8Array):flatbuffers.Offset {
  builder.startVector(1, data.length, 1);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt8(data[i]);
  }
  return builder.endVector();
};

/**
 * @param flatbuffers.Builder builder
 * @param number numElems
 */
static startDataVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(1, numElems, 1);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endRawLayer8(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

}
}
/**
 * @constructor
 */
export namespace Dalmatian{
export class VectorialLayer {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns VectorialLayer
 */
__init(i:number, bb:flatbuffers.ByteBuffer):VectorialLayer {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param VectorialLayer= obj
 * @returns VectorialLayer
 */
static getRootAsVectorialLayer(bb:flatbuffers.ByteBuffer, obj?:VectorialLayer):VectorialLayer {
  return (obj || new VectorialLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param number index
 * @param Dalmatian.Shape= obj
 * @returns Dalmatian.Shape
 */
shapes(index: number, obj?:Dalmatian.Shape):Dalmatian.Shape|null {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new Dalmatian.Shape).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
};

/**
 * @returns number
 */
shapesLength():number {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param flatbuffers.Builder builder
 */
static startVectorialLayer(builder:flatbuffers.Builder) {
  builder.startObject(1);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset shapesOffset
 */
static addShapes(builder:flatbuffers.Builder, shapesOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, shapesOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param Array.<flatbuffers.Offset> data
 * @returns flatbuffers.Offset
 */
static createShapesVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param flatbuffers.Builder builder
 * @param number numElems
 */
static startShapesVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endVectorialLayer(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

}
}
/**
 * @constructor
 */
export namespace Dalmatian{
export class Raw2DLayer64 {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns Raw2DLayer64
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Raw2DLayer64 {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param Raw2DLayer64= obj
 * @returns Raw2DLayer64
 */
static getRootAsRaw2DLayer64(bb:flatbuffers.ByteBuffer, obj?:Raw2DLayer64):Raw2DLayer64 {
  return (obj || new Raw2DLayer64).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param Dalmatian.RawLayerMeta= obj
 * @returns Dalmatian.RawLayerMeta|null
 */
meta(obj?:Dalmatian.RawLayerMeta):Dalmatian.RawLayerMeta|null {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new Dalmatian.RawLayerMeta).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
};

/**
 * @param number index
 * @param Dalmatian.ArrayOfU64= obj
 * @returns Dalmatian.ArrayOfU64
 */
data(index: number, obj?:Dalmatian.ArrayOfU64):Dalmatian.ArrayOfU64|null {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new Dalmatian.ArrayOfU64).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
};

/**
 * @returns number
 */
dataLength():number {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param flatbuffers.Builder builder
 */
static startRaw2DLayer64(builder:flatbuffers.Builder) {
  builder.startObject(2);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset metaOffset
 */
static addMeta(builder:flatbuffers.Builder, metaOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, metaOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset dataOffset
 */
static addData(builder:flatbuffers.Builder, dataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, dataOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param Array.<flatbuffers.Offset> data
 * @returns flatbuffers.Offset
 */
static createDataVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param flatbuffers.Builder builder
 * @param number numElems
 */
static startDataVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endRaw2DLayer64(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

}
}
/**
 * @constructor
 */
export namespace Dalmatian{
export class Raw2DLayer32 {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns Raw2DLayer32
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Raw2DLayer32 {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param Raw2DLayer32= obj
 * @returns Raw2DLayer32
 */
static getRootAsRaw2DLayer32(bb:flatbuffers.ByteBuffer, obj?:Raw2DLayer32):Raw2DLayer32 {
  return (obj || new Raw2DLayer32).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param Dalmatian.RawLayerMeta= obj
 * @returns Dalmatian.RawLayerMeta|null
 */
meta(obj?:Dalmatian.RawLayerMeta):Dalmatian.RawLayerMeta|null {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new Dalmatian.RawLayerMeta).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
};

/**
 * @param number index
 * @param Dalmatian.ArrayOfU32= obj
 * @returns Dalmatian.ArrayOfU32
 */
data(index: number, obj?:Dalmatian.ArrayOfU32):Dalmatian.ArrayOfU32|null {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new Dalmatian.ArrayOfU32).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
};

/**
 * @returns number
 */
dataLength():number {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param flatbuffers.Builder builder
 */
static startRaw2DLayer32(builder:flatbuffers.Builder) {
  builder.startObject(2);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset metaOffset
 */
static addMeta(builder:flatbuffers.Builder, metaOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, metaOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset dataOffset
 */
static addData(builder:flatbuffers.Builder, dataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, dataOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param Array.<flatbuffers.Offset> data
 * @returns flatbuffers.Offset
 */
static createDataVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param flatbuffers.Builder builder
 * @param number numElems
 */
static startDataVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endRaw2DLayer32(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

}
}
/**
 * @constructor
 */
export namespace Dalmatian{
export class Raw2DLayer16 {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns Raw2DLayer16
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Raw2DLayer16 {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param Raw2DLayer16= obj
 * @returns Raw2DLayer16
 */
static getRootAsRaw2DLayer16(bb:flatbuffers.ByteBuffer, obj?:Raw2DLayer16):Raw2DLayer16 {
  return (obj || new Raw2DLayer16).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param Dalmatian.RawLayerMeta= obj
 * @returns Dalmatian.RawLayerMeta|null
 */
meta(obj?:Dalmatian.RawLayerMeta):Dalmatian.RawLayerMeta|null {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new Dalmatian.RawLayerMeta).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
};

/**
 * @param number index
 * @param Dalmatian.ArrayOfU16= obj
 * @returns Dalmatian.ArrayOfU16
 */
data(index: number, obj?:Dalmatian.ArrayOfU16):Dalmatian.ArrayOfU16|null {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new Dalmatian.ArrayOfU16).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
};

/**
 * @returns number
 */
dataLength():number {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param flatbuffers.Builder builder
 */
static startRaw2DLayer16(builder:flatbuffers.Builder) {
  builder.startObject(2);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset metaOffset
 */
static addMeta(builder:flatbuffers.Builder, metaOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, metaOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset dataOffset
 */
static addData(builder:flatbuffers.Builder, dataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, dataOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param Array.<flatbuffers.Offset> data
 * @returns flatbuffers.Offset
 */
static createDataVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param flatbuffers.Builder builder
 * @param number numElems
 */
static startDataVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endRaw2DLayer16(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

}
}
/**
 * @constructor
 */
export namespace Dalmatian{
export class Raw2DLayer8 {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns Raw2DLayer8
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Raw2DLayer8 {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param Raw2DLayer8= obj
 * @returns Raw2DLayer8
 */
static getRootAsRaw2DLayer8(bb:flatbuffers.ByteBuffer, obj?:Raw2DLayer8):Raw2DLayer8 {
  return (obj || new Raw2DLayer8).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param Dalmatian.RawLayerMeta= obj
 * @returns Dalmatian.RawLayerMeta|null
 */
meta(obj?:Dalmatian.RawLayerMeta):Dalmatian.RawLayerMeta|null {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new Dalmatian.RawLayerMeta).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
};

/**
 * @param number index
 * @param Dalmatian.ArrayOfU8= obj
 * @returns Dalmatian.ArrayOfU8
 */
data(index: number, obj?:Dalmatian.ArrayOfU8):Dalmatian.ArrayOfU8|null {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new Dalmatian.ArrayOfU8).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
};

/**
 * @returns number
 */
dataLength():number {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param flatbuffers.Builder builder
 */
static startRaw2DLayer8(builder:flatbuffers.Builder) {
  builder.startObject(2);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset metaOffset
 */
static addMeta(builder:flatbuffers.Builder, metaOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, metaOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset dataOffset
 */
static addData(builder:flatbuffers.Builder, dataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, dataOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param Array.<flatbuffers.Offset> data
 * @returns flatbuffers.Offset
 */
static createDataVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param flatbuffers.Builder builder
 * @param number numElems
 */
static startDataVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endRaw2DLayer8(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

}
}
/**
 * @constructor
 */
export namespace Dalmatian{
export class Layer {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns Layer
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Layer {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param Layer= obj
 * @returns Layer
 */
static getRootAsLayer(bb:flatbuffers.ByteBuffer, obj?:Layer):Layer {
  return (obj || new Layer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns number
 */
id():number {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readUint16(this.bb_pos + offset) : 0;
};

/**
 * @returns Dalmatian.LayerData
 */
dataType():Dalmatian.LayerData {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? /**  */ (this.bb!.readUint8(this.bb_pos + offset)) : Dalmatian.LayerData.NONE;
};

/**
 * @param flatbuffers.Table obj
 * @returns ?flatbuffers.Table
 */
data<T extends flatbuffers.Table>(obj:T):T|null {
  var offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__union(obj, this.bb_pos + offset) : null;
};

/**
 * @param number index
 * @returns number
 */
colorId(index: number):number|null {
  var offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readInt8(this.bb!.__vector(this.bb_pos + offset) + index) : 0;
};

/**
 * @returns number
 */
colorIdLength():number {
  var offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns Int8Array
 */
colorIdArray():Int8Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? new Int8Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param Dalmatian.Hyperlink= obj
 * @returns Dalmatian.Hyperlink|null
 */
format(obj?:Dalmatian.Hyperlink):Dalmatian.Hyperlink|null {
  var offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? (obj || new Dalmatian.Hyperlink).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
};

/**
 * @param Dalmatian.Hyperlink= obj
 * @returns Dalmatian.Hyperlink|null
 */
description(obj?:Dalmatian.Hyperlink):Dalmatian.Hyperlink|null {
  var offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? (obj || new Dalmatian.Hyperlink).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
};

/**
 * @param number index
 * @param Dalmatian.Effect= obj
 * @returns Dalmatian.Effect
 */
effect(index: number, obj?:Dalmatian.Effect):Dalmatian.Effect|null {
  var offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? (obj || new Dalmatian.Effect).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
};

/**
 * @returns number
 */
effectLength():number {
  var offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param number index
 * @param Dalmatian.Relation= obj
 * @returns Dalmatian.Relation
 */
related(index: number, obj?:Dalmatian.Relation):Dalmatian.Relation|null {
  var offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? (obj || new Dalmatian.Relation).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
};

/**
 * @returns number
 */
relatedLength():number {
  var offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param flatbuffers.Builder builder
 */
static startLayer(builder:flatbuffers.Builder) {
  builder.startObject(8);
};

/**
 * @param flatbuffers.Builder builder
 * @param number id
 */
static addId(builder:flatbuffers.Builder, id:number) {
  builder.addFieldInt16(0, id, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param Dalmatian.LayerData dataType
 */
static addDataType(builder:flatbuffers.Builder, dataType:Dalmatian.LayerData) {
  builder.addFieldInt8(1, dataType, Dalmatian.LayerData.NONE);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset dataOffset
 */
static addData(builder:flatbuffers.Builder, dataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, dataOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset colorIdOffset
 */
static addColorId(builder:flatbuffers.Builder, colorIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, colorIdOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param Array.<number> data
 * @returns flatbuffers.Offset
 */
static createColorIdVector(builder:flatbuffers.Builder, data:number[] | Uint8Array):flatbuffers.Offset {
  builder.startVector(1, data.length, 1);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt8(data[i]);
  }
  return builder.endVector();
};

/**
 * @param flatbuffers.Builder builder
 * @param number numElems
 */
static startColorIdVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(1, numElems, 1);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset formatOffset
 */
static addFormat(builder:flatbuffers.Builder, formatOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, formatOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset descriptionOffset
 */
static addDescription(builder:flatbuffers.Builder, descriptionOffset:flatbuffers.Offset) {
  builder.addFieldOffset(5, descriptionOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset effectOffset
 */
static addEffect(builder:flatbuffers.Builder, effectOffset:flatbuffers.Offset) {
  builder.addFieldOffset(6, effectOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param Array.<flatbuffers.Offset> data
 * @returns flatbuffers.Offset
 */
static createEffectVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param flatbuffers.Builder builder
 * @param number numElems
 */
static startEffectVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset relatedOffset
 */
static addRelated(builder:flatbuffers.Builder, relatedOffset:flatbuffers.Offset) {
  builder.addFieldOffset(7, relatedOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param Array.<flatbuffers.Offset> data
 * @returns flatbuffers.Offset
 */
static createRelatedVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param flatbuffers.Builder builder
 * @param number numElems
 */
static startRelatedVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endLayer(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  builder.requiredField(offset, 8); // data
  return offset;
};

}
}
/**
 * @constructor
 */
export namespace Dalmatian{
export class Publishing {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns Publishing
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Publishing {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param Publishing= obj
 * @returns Publishing
 */
static getRootAsPublishing(bb:flatbuffers.ByteBuffer, obj?:Publishing):Publishing {
  return (obj || new Publishing).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns number
 */
id():number {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt8(this.bb_pos + offset) : 0;
};

/**
 * @param Dalmatian.Hyperlink= obj
 * @returns Dalmatian.Hyperlink|null
 */
medium(obj?:Dalmatian.Hyperlink):Dalmatian.Hyperlink|null {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new Dalmatian.Hyperlink).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
};

/**
 * @param Dalmatian.Hyperlink= obj
 * @returns Dalmatian.Hyperlink|null
 */
format(obj?:Dalmatian.Hyperlink):Dalmatian.Hyperlink|null {
  var offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? (obj || new Dalmatian.Hyperlink).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
};

/**
 * @param number index
 * @param Dalmatian.IRI= obj
 * @returns Dalmatian.IRI
 */
style(index: number, obj?:Dalmatian.IRI):Dalmatian.IRI|null {
  var offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? (obj || new Dalmatian.IRI).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
};

/**
 * @returns number
 */
styleLength():number {
  var offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param number index
 * @returns number
 */
colorId(index: number):number|null {
  var offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.readInt8(this.bb!.__vector(this.bb_pos + offset) + index) : 0;
};

/**
 * @returns number
 */
colorIdLength():number {
  var offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns Int8Array
 */
colorIdArray():Int8Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? new Int8Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param Dalmatian.Dimension2D= obj
 * @returns Dalmatian.Dimension2D|null
 */
dimension(obj?:Dalmatian.Dimension2D):Dalmatian.Dimension2D|null {
  var offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? (obj || new Dalmatian.Dimension2D).__init(this.bb_pos + offset, this.bb!) : null;
};

/**
 * @returns number
 */
dpi():number {
  var offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.readUint16(this.bb_pos + offset) : 0;
};

/**
 * @param number index
 * @param Dalmatian.Relation= obj
 * @returns Dalmatian.Relation
 */
related(index: number, obj?:Dalmatian.Relation):Dalmatian.Relation|null {
  var offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? (obj || new Dalmatian.Relation).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
};

/**
 * @returns number
 */
relatedLength():number {
  var offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param number index
 * @param Dalmatian.Effect= obj
 * @returns Dalmatian.Effect
 */
effect(index: number, obj?:Dalmatian.Effect):Dalmatian.Effect|null {
  var offset = this.bb!.__offset(this.bb_pos, 20);
  return offset ? (obj || new Dalmatian.Effect).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
};

/**
 * @returns number
 */
effectLength():number {
  var offset = this.bb!.__offset(this.bb_pos, 20);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param flatbuffers.Builder builder
 */
static startPublishing(builder:flatbuffers.Builder) {
  builder.startObject(9);
};

/**
 * @param flatbuffers.Builder builder
 * @param number id
 */
static addId(builder:flatbuffers.Builder, id:number) {
  builder.addFieldInt8(0, id, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset mediumOffset
 */
static addMedium(builder:flatbuffers.Builder, mediumOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, mediumOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset formatOffset
 */
static addFormat(builder:flatbuffers.Builder, formatOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, formatOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset styleOffset
 */
static addStyle(builder:flatbuffers.Builder, styleOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, styleOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param Array.<flatbuffers.Offset> data
 * @returns flatbuffers.Offset
 */
static createStyleVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param flatbuffers.Builder builder
 * @param number numElems
 */
static startStyleVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset colorIdOffset
 */
static addColorId(builder:flatbuffers.Builder, colorIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, colorIdOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param Array.<number> data
 * @returns flatbuffers.Offset
 */
static createColorIdVector(builder:flatbuffers.Builder, data:number[] | Uint8Array):flatbuffers.Offset {
  builder.startVector(1, data.length, 1);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt8(data[i]);
  }
  return builder.endVector();
};

/**
 * @param flatbuffers.Builder builder
 * @param number numElems
 */
static startColorIdVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(1, numElems, 1);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset dimensionOffset
 */
static addDimension(builder:flatbuffers.Builder, dimensionOffset:flatbuffers.Offset) {
  builder.addFieldStruct(5, dimensionOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param number dpi
 */
static addDpi(builder:flatbuffers.Builder, dpi:number) {
  builder.addFieldInt16(6, dpi, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset relatedOffset
 */
static addRelated(builder:flatbuffers.Builder, relatedOffset:flatbuffers.Offset) {
  builder.addFieldOffset(7, relatedOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param Array.<flatbuffers.Offset> data
 * @returns flatbuffers.Offset
 */
static createRelatedVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param flatbuffers.Builder builder
 * @param number numElems
 */
static startRelatedVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset effectOffset
 */
static addEffect(builder:flatbuffers.Builder, effectOffset:flatbuffers.Offset) {
  builder.addFieldOffset(8, effectOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param Array.<flatbuffers.Offset> data
 * @returns flatbuffers.Offset
 */
static createEffectVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param flatbuffers.Builder builder
 * @param number numElems
 */
static startEffectVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endPublishing(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

}
}
/**
 * @constructor
 */
export namespace Dalmatian{
export class Image {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns Image
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Image {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param Image= obj
 * @returns Image
 */
static getRootAsImage(bb:flatbuffers.ByteBuffer, obj?:Image):Image {
  return (obj || new Image).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @returns boolean
 */
static bufferHasIdentifier(bb:flatbuffers.ByteBuffer):boolean {
  return bb.__has_identifier('DALN');
};

/**
 * @param number index
 * @param Dalmatian.IRIMeta= obj
 * @returns Dalmatian.IRIMeta
 */
iriSpace(index: number, obj?:Dalmatian.IRIMeta):Dalmatian.IRIMeta|null {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new Dalmatian.IRIMeta).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
};

/**
 * @returns number
 */
iriSpaceLength():number {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param number index
 * @param Dalmatian.Color= obj
 * @returns Dalmatian.Color
 */
color(index: number, obj?:Dalmatian.Color):Dalmatian.Color|null {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new Dalmatian.Color).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
};

/**
 * @returns number
 */
colorLength():number {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param number index
 * @param Dalmatian.Processor= obj
 * @returns Dalmatian.Processor
 */
processor(index: number, obj?:Dalmatian.Processor):Dalmatian.Processor|null {
  var offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? (obj || new Dalmatian.Processor).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
};

/**
 * @returns number
 */
processorLength():number {
  var offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param number index
 * @param Dalmatian.Script= obj
 * @returns Dalmatian.Script
 */
script(index: number, obj?:Dalmatian.Script):Dalmatian.Script|null {
  var offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? (obj || new Dalmatian.Script).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
};

/**
 * @returns number
 */
scriptLength():number {
  var offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param Dalmatian.Metadata= obj
 * @returns Dalmatian.Metadata|null
 */
metadata(obj?:Dalmatian.Metadata):Dalmatian.Metadata|null {
  var offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? (obj || new Dalmatian.Metadata).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
};

/**
 * @param number index
 * @param Dalmatian.Layer= obj
 * @returns Dalmatian.Layer
 */
layer(index: number, obj?:Dalmatian.Layer):Dalmatian.Layer|null {
  var offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? (obj || new Dalmatian.Layer).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
};

/**
 * @returns number
 */
layerLength():number {
  var offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param number index
 * @param Dalmatian.Publishing= obj
 * @returns Dalmatian.Publishing
 */
publishing(index: number, obj?:Dalmatian.Publishing):Dalmatian.Publishing|null {
  var offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? (obj || new Dalmatian.Publishing).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
};

/**
 * @returns number
 */
publishingLength():number {
  var offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param flatbuffers.Builder builder
 */
static startImage(builder:flatbuffers.Builder) {
  builder.startObject(7);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset iriSpaceOffset
 */
static addIriSpace(builder:flatbuffers.Builder, iriSpaceOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, iriSpaceOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param Array.<flatbuffers.Offset> data
 * @returns flatbuffers.Offset
 */
static createIriSpaceVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param flatbuffers.Builder builder
 * @param number numElems
 */
static startIriSpaceVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset colorOffset
 */
static addColor(builder:flatbuffers.Builder, colorOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, colorOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param Array.<flatbuffers.Offset> data
 * @returns flatbuffers.Offset
 */
static createColorVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param flatbuffers.Builder builder
 * @param number numElems
 */
static startColorVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset processorOffset
 */
static addProcessor(builder:flatbuffers.Builder, processorOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, processorOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param Array.<flatbuffers.Offset> data
 * @returns flatbuffers.Offset
 */
static createProcessorVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param flatbuffers.Builder builder
 * @param number numElems
 */
static startProcessorVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset scriptOffset
 */
static addScript(builder:flatbuffers.Builder, scriptOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, scriptOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param Array.<flatbuffers.Offset> data
 * @returns flatbuffers.Offset
 */
static createScriptVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param flatbuffers.Builder builder
 * @param number numElems
 */
static startScriptVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset metadataOffset
 */
static addMetadata(builder:flatbuffers.Builder, metadataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, metadataOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset layerOffset
 */
static addLayer(builder:flatbuffers.Builder, layerOffset:flatbuffers.Offset) {
  builder.addFieldOffset(5, layerOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param Array.<flatbuffers.Offset> data
 * @returns flatbuffers.Offset
 */
static createLayerVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param flatbuffers.Builder builder
 * @param number numElems
 */
static startLayerVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset publishingOffset
 */
static addPublishing(builder:flatbuffers.Builder, publishingOffset:flatbuffers.Offset) {
  builder.addFieldOffset(6, publishingOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param Array.<flatbuffers.Offset> data
 * @returns flatbuffers.Offset
 */
static createPublishingVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param flatbuffers.Builder builder
 * @param number numElems
 */
static startPublishingVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endImage(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  builder.requiredField(offset, 4); // iriSpace
  builder.requiredField(offset, 6); // color
  builder.requiredField(offset, 8); // processor
  builder.requiredField(offset, 10); // script
  builder.requiredField(offset, 12); // metadata
  builder.requiredField(offset, 14); // layer
  builder.requiredField(offset, 16); // publishing
  return offset;
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset offset
 */
static finishImageBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {
  builder.finish(offset, 'DALN');
};

}
}
