// tslint:disable: member-access member-ordering max-classes-per-file prefer-const no-class variable-name no-expression-statement no-object-mutation no-this readonly-keyword no-var-keyword typedef readonly-array no-namespace

import { flatbuffers } from 'flatbuffers';
export { flatbuffers };
// automatically generated by the FlatBuffers compiler, do not modify

/**
 * @enum
 */
export enum anyUint {
  NONE = 0,
  Uint8 = 1,
  Uint16 = 2,
  Uint32 = 3
}

/**
 * @enum
 */
export enum ObjectValue {
  NONE = 0,
  IRI = 1,
  Localized = 2,
  Text = 3,
  Bool = 4,
  Uint8 = 5,
  Uint16 = 6,
  Uint32 = 7,
  Float = 8,
  Vector2d = 9,
  Vector3d = 10,
  Vector2dFloat = 11,
  Vector3dFloat = 12,
  AnyURI = 13,
  IsoDateTime = 14,
  VectorColorRGBA = 15
}

/**
 * @enum
 */
export enum ArcFlag {
  LargeArcA = 0,
  SmallArcA = 1,
  LargeArcB = 2,
  SmallArcB = 3
}

/**
 * @enum
 */
export enum Draw {
  NONE = 0,
  MoveTo = 1,
  LineTo = 2,
  Horizontal = 3,
  Vertical = 4,
  CubicCurve = 5,
  SmoothCubicCurve = 6,
  QuadraticCurve = 7,
  SmoothQuadraticCurve = 8,
  EllipticalArc = 9
}

/**
 * @enum
 */
export enum LayerData {
  NONE = 0,
  RawLayer = 1,
  VectorialLayer = 2
}

/**
 * @constructor
 */
export class Vec2d {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns Vec2d
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): Vec2d {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @returns number
   */
  x(): number {
    return this.bb!.readUint32(this.bb_pos);
  }

  /**
   * @returns number
   */
  y(): number {
    return this.bb!.readUint32(this.bb_pos + 4);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param number x
   * @param number y
   * @returns flatbuffers.Offset
   */
  static createVec2d(
    builder: flatbuffers.Builder,
    x: number,
    y: number
  ): flatbuffers.Offset {
    builder.prep(4, 8);
    builder.writeInt32(y);
    builder.writeInt32(x);
    return builder.offset();
  }
}
/**
 * @constructor
 */
export class Vec2dFloat {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns Vec2dFloat
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): Vec2dFloat {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @returns number
   */
  x(): number {
    return this.bb!.readFloat32(this.bb_pos);
  }

  /**
   * @returns number
   */
  y(): number {
    return this.bb!.readFloat32(this.bb_pos + 4);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param number x
   * @param number y
   * @returns flatbuffers.Offset
   */
  static createVec2dFloat(
    builder: flatbuffers.Builder,
    x: number,
    y: number
  ): flatbuffers.Offset {
    builder.prep(4, 8);
    builder.writeFloat32(y);
    builder.writeFloat32(x);
    return builder.offset();
  }
}
/**
 * @constructor
 */
export class Vec3d {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns Vec3d
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): Vec3d {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @returns number
   */
  x(): number {
    return this.bb!.readUint32(this.bb_pos);
  }

  /**
   * @returns number
   */
  y(): number {
    return this.bb!.readUint32(this.bb_pos + 4);
  }

  /**
   * @returns number
   */
  z(): number {
    return this.bb!.readUint32(this.bb_pos + 8);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param number x
   * @param number y
   * @param number z
   * @returns flatbuffers.Offset
   */
  static createVec3d(
    builder: flatbuffers.Builder,
    x: number,
    y: number,
    z: number
  ): flatbuffers.Offset {
    builder.prep(4, 12);
    builder.writeInt32(z);
    builder.writeInt32(y);
    builder.writeInt32(x);
    return builder.offset();
  }
}
/**
 * @constructor
 */
export class Vec3dFloat {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns Vec3dFloat
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): Vec3dFloat {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @returns number
   */
  x(): number {
    return this.bb!.readFloat32(this.bb_pos);
  }

  /**
   * @returns number
   */
  y(): number {
    return this.bb!.readFloat32(this.bb_pos + 4);
  }

  /**
   * @returns number
   */
  z(): number {
    return this.bb!.readFloat32(this.bb_pos + 8);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param number x
   * @param number y
   * @param number z
   * @returns flatbuffers.Offset
   */
  static createVec3dFloat(
    builder: flatbuffers.Builder,
    x: number,
    y: number,
    z: number
  ): flatbuffers.Offset {
    builder.prep(4, 12);
    builder.writeFloat32(z);
    builder.writeFloat32(y);
    builder.writeFloat32(x);
    return builder.offset();
  }
}
/**
 * @constructor
 */
export class ColorRGBA {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns ColorRGBA
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): ColorRGBA {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @returns number
   */
  r(): number {
    return this.bb!.readUint16(this.bb_pos);
  }

  /**
   * @returns number
   */
  g(): number {
    return this.bb!.readUint16(this.bb_pos + 2);
  }

  /**
   * @returns number
   */
  b(): number {
    return this.bb!.readUint16(this.bb_pos + 4);
  }

  /**
   * @returns number
   */
  a(): number {
    return this.bb!.readUint16(this.bb_pos + 6);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param number r
   * @param number g
   * @param number b
   * @param number a
   * @returns flatbuffers.Offset
   */
  static createColorRGBA(
    builder: flatbuffers.Builder,
    r: number,
    g: number,
    b: number,
    a: number
  ): flatbuffers.Offset {
    builder.prep(2, 8);
    builder.writeInt16(a);
    builder.writeInt16(b);
    builder.writeInt16(g);
    builder.writeInt16(r);
    return builder.offset();
  }
}
/**
 * @constructor
 */
export class Curie {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns Curie
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): Curie {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param Curie= obj
   * @returns Curie
   */
  static getRootAsCurie(bb: flatbuffers.ByteBuffer, obj?: Curie): Curie {
    return (obj || new Curie()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @param flatbuffers.Encoding= optionalEncoding
   * @returns string|Uint8Array|null
   */
  prefix(): string | null;
  prefix(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
  prefix(optionalEncoding?: any): string | Uint8Array | null {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset
      ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
      : null;
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startCurie(builder: flatbuffers.Builder) {
    builder.startObject(1);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset prefixOffset
   */
  static addPrefix(
    builder: flatbuffers.Builder,
    prefixOffset: flatbuffers.Offset
  ) {
    builder.addFieldOffset(0, prefixOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endCurie(builder: flatbuffers.Builder): flatbuffers.Offset {
    var offset = builder.endObject();
    return offset;
  }
}
/**
 * @constructor
 */
export class IRI {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns IRI
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): IRI {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param IRI= obj
   * @returns IRI
   */
  static getRootAsIRI(bb: flatbuffers.ByteBuffer, obj?: IRI): IRI {
    return (obj || new IRI()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @param Curie= obj
   * @returns Curie|null
   */
  curie(obj?: Curie): Curie | null {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset
      ? (obj || new Curie()).__init(
          this.bb!.__indirect(this.bb_pos + offset),
          this.bb!
        )
      : null;
  }

  /**
   * @param flatbuffers.Encoding= optionalEncoding
   * @returns string|Uint8Array|null
   */
  path(): string | null;
  path(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
  path(optionalEncoding?: any): string | Uint8Array | null {
    var offset = this.bb!.__offset(this.bb_pos, 6);
    return offset
      ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
      : null;
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startIRI(builder: flatbuffers.Builder) {
    builder.startObject(2);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset curieOffset
   */
  static addCurie(
    builder: flatbuffers.Builder,
    curieOffset: flatbuffers.Offset
  ) {
    builder.addFieldOffset(0, curieOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset pathOffset
   */
  static addPath(builder: flatbuffers.Builder, pathOffset: flatbuffers.Offset) {
    builder.addFieldOffset(1, pathOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endIRI(builder: flatbuffers.Builder): flatbuffers.Offset {
    var offset = builder.endObject();
    builder.requiredField(offset, 6); // path
    return offset;
  }
}
/**
 * @constructor
 */
export class Localized {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns Localized
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): Localized {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param Localized= obj
   * @returns Localized
   */
  static getRootAsLocalized(
    bb: flatbuffers.ByteBuffer,
    obj?: Localized
  ): Localized {
    return (obj || new Localized()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @param flatbuffers.Encoding= optionalEncoding
   * @returns string|Uint8Array|null
   */
  text(): string | null;
  text(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
  text(optionalEncoding?: any): string | Uint8Array | null {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset
      ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
      : null;
  }

  /**
   * @param flatbuffers.Encoding= optionalEncoding
   * @returns string|Uint8Array|null
   */
  language(): string | null;
  language(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
  language(optionalEncoding?: any): string | Uint8Array | null {
    var offset = this.bb!.__offset(this.bb_pos, 6);
    return offset
      ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
      : null;
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startLocalized(builder: flatbuffers.Builder) {
    builder.startObject(2);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset textOffset
   */
  static addText(builder: flatbuffers.Builder, textOffset: flatbuffers.Offset) {
    builder.addFieldOffset(0, textOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset languageOffset
   */
  static addLanguage(
    builder: flatbuffers.Builder,
    languageOffset: flatbuffers.Offset
  ) {
    builder.addFieldOffset(1, languageOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endLocalized(builder: flatbuffers.Builder): flatbuffers.Offset {
    var offset = builder.endObject();
    builder.requiredField(offset, 4); // text
    builder.requiredField(offset, 6); // language
    return offset;
  }
}
/**
 * @constructor
 */
export class Text {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns Text
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): Text {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param Text= obj
   * @returns Text
   */
  static getRootAsText(bb: flatbuffers.ByteBuffer, obj?: Text): Text {
    return (obj || new Text()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @param flatbuffers.Encoding= optionalEncoding
   * @returns string|Uint8Array|null
   */
  value(): string | null;
  value(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
  value(optionalEncoding?: any): string | Uint8Array | null {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset
      ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
      : null;
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startText(builder: flatbuffers.Builder) {
    builder.startObject(1);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset valueOffset
   */
  static addValue(
    builder: flatbuffers.Builder,
    valueOffset: flatbuffers.Offset
  ) {
    builder.addFieldOffset(0, valueOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endText(builder: flatbuffers.Builder): flatbuffers.Offset {
    var offset = builder.endObject();
    builder.requiredField(offset, 4); // value
    return offset;
  }
}
/**
 * @constructor
 */
export class AnyURI {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns AnyURI
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): AnyURI {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param AnyURI= obj
   * @returns AnyURI
   */
  static getRootAsAnyURI(bb: flatbuffers.ByteBuffer, obj?: AnyURI): AnyURI {
    return (obj || new AnyURI()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @param flatbuffers.Encoding= optionalEncoding
   * @returns string|Uint8Array|null
   */
  value(): string | null;
  value(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
  value(optionalEncoding?: any): string | Uint8Array | null {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset
      ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
      : null;
  }

  /**
   * @param flatbuffers.Encoding= optionalEncoding
   * @returns string|Uint8Array|null
   */
  mediaType(): string | null;
  mediaType(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
  mediaType(optionalEncoding?: any): string | Uint8Array | null {
    var offset = this.bb!.__offset(this.bb_pos, 6);
    return offset
      ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
      : null;
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startAnyURI(builder: flatbuffers.Builder) {
    builder.startObject(2);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset valueOffset
   */
  static addValue(
    builder: flatbuffers.Builder,
    valueOffset: flatbuffers.Offset
  ) {
    builder.addFieldOffset(0, valueOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset mediaTypeOffset
   */
  static addMediaType(
    builder: flatbuffers.Builder,
    mediaTypeOffset: flatbuffers.Offset
  ) {
    builder.addFieldOffset(1, mediaTypeOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endAnyURI(builder: flatbuffers.Builder): flatbuffers.Offset {
    var offset = builder.endObject();
    builder.requiredField(offset, 4); // value
    return offset;
  }
}
/**
 * @constructor
 */
export class IsoDateTime {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns IsoDateTime
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): IsoDateTime {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param IsoDateTime= obj
   * @returns IsoDateTime
   */
  static getRootAsIsoDateTime(
    bb: flatbuffers.ByteBuffer,
    obj?: IsoDateTime
  ): IsoDateTime {
    return (obj || new IsoDateTime()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @param flatbuffers.Encoding= optionalEncoding
   * @returns string|Uint8Array|null
   */
  value(): string | null;
  value(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
  value(optionalEncoding?: any): string | Uint8Array | null {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset
      ? this.bb!.__string(this.bb_pos + offset, optionalEncoding)
      : null;
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startIsoDateTime(builder: flatbuffers.Builder) {
    builder.startObject(1);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset valueOffset
   */
  static addValue(
    builder: flatbuffers.Builder,
    valueOffset: flatbuffers.Offset
  ) {
    builder.addFieldOffset(0, valueOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endIsoDateTime(builder: flatbuffers.Builder): flatbuffers.Offset {
    var offset = builder.endObject();
    builder.requiredField(offset, 4); // value
    return offset;
  }
}
/**
 * @constructor
 */
export class Bool {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns Bool
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): Bool {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param Bool= obj
   * @returns Bool
   */
  static getRootAsBool(bb: flatbuffers.ByteBuffer, obj?: Bool): Bool {
    return (obj || new Bool()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @returns boolean
   */
  value(): boolean {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startBool(builder: flatbuffers.Builder) {
    builder.startObject(1);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param boolean value
   */
  static addValue(builder: flatbuffers.Builder, value: boolean) {
    builder.addFieldInt8(0, +value, +false);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endBool(builder: flatbuffers.Builder): flatbuffers.Offset {
    var offset = builder.endObject();
    return offset;
  }
}
/**
 * @constructor
 */
export class Uint8 {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns Uint8
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): Uint8 {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param Uint8= obj
   * @returns Uint8
   */
  static getRootAsUint8(bb: flatbuffers.ByteBuffer, obj?: Uint8): Uint8 {
    return (obj || new Uint8()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @param number index
   * @returns number
   */
  value(index: number): number | null {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset
      ? this.bb!.readUint8(this.bb!.__vector(this.bb_pos + offset) + index)
      : 0;
  }

  /**
   * @returns number
   */
  valueLength(): number {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
  }

  /**
   * @returns Uint8Array
   */
  valueArray(): Uint8Array | null {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset
      ? new Uint8Array(
          this.bb!.bytes().buffer,
          this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset),
          this.bb!.__vector_len(this.bb_pos + offset)
        )
      : null;
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startUint8(builder: flatbuffers.Builder) {
    builder.startObject(1);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset valueOffset
   */
  static addValue(
    builder: flatbuffers.Builder,
    valueOffset: flatbuffers.Offset
  ) {
    builder.addFieldOffset(0, valueOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param Array.<number> data
   * @returns flatbuffers.Offset
   */
  static createValueVector(
    builder: flatbuffers.Builder,
    data: number[] | Uint8Array
  ): flatbuffers.Offset {
    builder.startVector(1, data.length, 1);
    for (var i = data.length - 1; i >= 0; i--) {
      builder.addInt8(data[i]);
    }
    return builder.endVector();
  }

  /**
   * @param flatbuffers.Builder builder
   * @param number numElems
   */
  static startValueVector(builder: flatbuffers.Builder, numElems: number) {
    builder.startVector(1, numElems, 1);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endUint8(builder: flatbuffers.Builder): flatbuffers.Offset {
    var offset = builder.endObject();
    return offset;
  }
}
/**
 * @constructor
 */
export class Uint16 {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns Uint16
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): Uint16 {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param Uint16= obj
   * @returns Uint16
   */
  static getRootAsUint16(bb: flatbuffers.ByteBuffer, obj?: Uint16): Uint16 {
    return (obj || new Uint16()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @param number index
   * @returns number
   */
  value(index: number): number | null {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset
      ? this.bb!.readUint16(this.bb!.__vector(this.bb_pos + offset) + index * 2)
      : 0;
  }

  /**
   * @returns number
   */
  valueLength(): number {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
  }

  /**
   * @returns Uint16Array
   */
  valueArray(): Uint16Array | null {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset
      ? new Uint16Array(
          this.bb!.bytes().buffer,
          this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset),
          this.bb!.__vector_len(this.bb_pos + offset)
        )
      : null;
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startUint16(builder: flatbuffers.Builder) {
    builder.startObject(1);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset valueOffset
   */
  static addValue(
    builder: flatbuffers.Builder,
    valueOffset: flatbuffers.Offset
  ) {
    builder.addFieldOffset(0, valueOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param Array.<number> data
   * @returns flatbuffers.Offset
   */
  static createValueVector(
    builder: flatbuffers.Builder,
    data: number[] | Uint8Array
  ): flatbuffers.Offset {
    builder.startVector(2, data.length, 2);
    for (var i = data.length - 1; i >= 0; i--) {
      builder.addInt16(data[i]);
    }
    return builder.endVector();
  }

  /**
   * @param flatbuffers.Builder builder
   * @param number numElems
   */
  static startValueVector(builder: flatbuffers.Builder, numElems: number) {
    builder.startVector(2, numElems, 2);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endUint16(builder: flatbuffers.Builder): flatbuffers.Offset {
    var offset = builder.endObject();
    return offset;
  }
}
/**
 * @constructor
 */
export class Uint32 {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns Uint32
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): Uint32 {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param Uint32= obj
   * @returns Uint32
   */
  static getRootAsUint32(bb: flatbuffers.ByteBuffer, obj?: Uint32): Uint32 {
    return (obj || new Uint32()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @param number index
   * @returns number
   */
  value(index: number): number | null {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset
      ? this.bb!.readUint32(this.bb!.__vector(this.bb_pos + offset) + index * 4)
      : 0;
  }

  /**
   * @returns number
   */
  valueLength(): number {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
  }

  /**
   * @returns Uint32Array
   */
  valueArray(): Uint32Array | null {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset
      ? new Uint32Array(
          this.bb!.bytes().buffer,
          this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset),
          this.bb!.__vector_len(this.bb_pos + offset)
        )
      : null;
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startUint32(builder: flatbuffers.Builder) {
    builder.startObject(1);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset valueOffset
   */
  static addValue(
    builder: flatbuffers.Builder,
    valueOffset: flatbuffers.Offset
  ) {
    builder.addFieldOffset(0, valueOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param Array.<number> data
   * @returns flatbuffers.Offset
   */
  static createValueVector(
    builder: flatbuffers.Builder,
    data: number[] | Uint8Array
  ): flatbuffers.Offset {
    builder.startVector(4, data.length, 4);
    for (var i = data.length - 1; i >= 0; i--) {
      builder.addInt32(data[i]);
    }
    return builder.endVector();
  }

  /**
   * @param flatbuffers.Builder builder
   * @param number numElems
   */
  static startValueVector(builder: flatbuffers.Builder, numElems: number) {
    builder.startVector(4, numElems, 4);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endUint32(builder: flatbuffers.Builder): flatbuffers.Offset {
    var offset = builder.endObject();
    return offset;
  }
}
/**
 * @constructor
 */
export class Float {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns Float
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): Float {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param Float= obj
   * @returns Float
   */
  static getRootAsFloat(bb: flatbuffers.ByteBuffer, obj?: Float): Float {
    return (obj || new Float()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @param number index
   * @returns number
   */
  value(index: number): number | null {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset
      ? this.bb!.readFloat32(
          this.bb!.__vector(this.bb_pos + offset) + index * 4
        )
      : 0;
  }

  /**
   * @returns number
   */
  valueLength(): number {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
  }

  /**
   * @returns Float32Array
   */
  valueArray(): Float32Array | null {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset
      ? new Float32Array(
          this.bb!.bytes().buffer,
          this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset),
          this.bb!.__vector_len(this.bb_pos + offset)
        )
      : null;
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startFloat(builder: flatbuffers.Builder) {
    builder.startObject(1);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset valueOffset
   */
  static addValue(
    builder: flatbuffers.Builder,
    valueOffset: flatbuffers.Offset
  ) {
    builder.addFieldOffset(0, valueOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param Array.<number> data
   * @returns flatbuffers.Offset
   */
  static createValueVector(
    builder: flatbuffers.Builder,
    data: number[] | Uint8Array
  ): flatbuffers.Offset {
    builder.startVector(4, data.length, 4);
    for (var i = data.length - 1; i >= 0; i--) {
      builder.addFloat32(data[i]);
    }
    return builder.endVector();
  }

  /**
   * @param flatbuffers.Builder builder
   * @param number numElems
   */
  static startValueVector(builder: flatbuffers.Builder, numElems: number) {
    builder.startVector(4, numElems, 4);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endFloat(builder: flatbuffers.Builder): flatbuffers.Offset {
    var offset = builder.endObject();
    builder.requiredField(offset, 4); // value
    return offset;
  }
}
/**
 * @constructor
 */
export class Vector2d {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns Vector2d
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): Vector2d {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param Vector2d= obj
   * @returns Vector2d
   */
  static getRootAsVector2d(
    bb: flatbuffers.ByteBuffer,
    obj?: Vector2d
  ): Vector2d {
    return (obj || new Vector2d()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @param Vec2d= obj
   * @returns Vec2d|null
   */
  value(obj?: Vec2d): Vec2d | null {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset
      ? (obj || new Vec2d()).__init(this.bb_pos + offset, this.bb!)
      : null;
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startVector2d(builder: flatbuffers.Builder) {
    builder.startObject(1);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset valueOffset
   */
  static addValue(
    builder: flatbuffers.Builder,
    valueOffset: flatbuffers.Offset
  ) {
    builder.addFieldStruct(0, valueOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endVector2d(builder: flatbuffers.Builder): flatbuffers.Offset {
    var offset = builder.endObject();
    builder.requiredField(offset, 4); // value
    return offset;
  }
}
/**
 * @constructor
 */
export class Vector3d {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns Vector3d
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): Vector3d {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param Vector3d= obj
   * @returns Vector3d
   */
  static getRootAsVector3d(
    bb: flatbuffers.ByteBuffer,
    obj?: Vector3d
  ): Vector3d {
    return (obj || new Vector3d()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @param Vec3d= obj
   * @returns Vec3d|null
   */
  value(obj?: Vec3d): Vec3d | null {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset
      ? (obj || new Vec3d()).__init(this.bb_pos + offset, this.bb!)
      : null;
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startVector3d(builder: flatbuffers.Builder) {
    builder.startObject(1);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset valueOffset
   */
  static addValue(
    builder: flatbuffers.Builder,
    valueOffset: flatbuffers.Offset
  ) {
    builder.addFieldStruct(0, valueOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endVector3d(builder: flatbuffers.Builder): flatbuffers.Offset {
    var offset = builder.endObject();
    builder.requiredField(offset, 4); // value
    return offset;
  }
}
/**
 * @constructor
 */
export class Vector2dFloat {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns Vector2dFloat
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): Vector2dFloat {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param Vector2dFloat= obj
   * @returns Vector2dFloat
   */
  static getRootAsVector2dFloat(
    bb: flatbuffers.ByteBuffer,
    obj?: Vector2dFloat
  ): Vector2dFloat {
    return (obj || new Vector2dFloat()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @param Vec2dFloat= obj
   * @returns Vec2dFloat|null
   */
  value(obj?: Vec2dFloat): Vec2dFloat | null {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset
      ? (obj || new Vec2dFloat()).__init(this.bb_pos + offset, this.bb!)
      : null;
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startVector2dFloat(builder: flatbuffers.Builder) {
    builder.startObject(1);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset valueOffset
   */
  static addValue(
    builder: flatbuffers.Builder,
    valueOffset: flatbuffers.Offset
  ) {
    builder.addFieldStruct(0, valueOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endVector2dFloat(builder: flatbuffers.Builder): flatbuffers.Offset {
    var offset = builder.endObject();
    builder.requiredField(offset, 4); // value
    return offset;
  }
}
/**
 * @constructor
 */
export class Vector3dFloat {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns Vector3dFloat
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): Vector3dFloat {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param Vector3dFloat= obj
   * @returns Vector3dFloat
   */
  static getRootAsVector3dFloat(
    bb: flatbuffers.ByteBuffer,
    obj?: Vector3dFloat
  ): Vector3dFloat {
    return (obj || new Vector3dFloat()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @param Vec3dFloat= obj
   * @returns Vec3dFloat|null
   */
  value(obj?: Vec3dFloat): Vec3dFloat | null {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset
      ? (obj || new Vec3dFloat()).__init(this.bb_pos + offset, this.bb!)
      : null;
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startVector3dFloat(builder: flatbuffers.Builder) {
    builder.startObject(1);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset valueOffset
   */
  static addValue(
    builder: flatbuffers.Builder,
    valueOffset: flatbuffers.Offset
  ) {
    builder.addFieldStruct(0, valueOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endVector3dFloat(builder: flatbuffers.Builder): flatbuffers.Offset {
    var offset = builder.endObject();
    builder.requiredField(offset, 4); // value
    return offset;
  }
}
/**
 * @constructor
 */
export class VectorColorRGBA {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns VectorColorRGBA
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): VectorColorRGBA {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param VectorColorRGBA= obj
   * @returns VectorColorRGBA
   */
  static getRootAsVectorColorRGBA(
    bb: flatbuffers.ByteBuffer,
    obj?: VectorColorRGBA
  ): VectorColorRGBA {
    return (obj || new VectorColorRGBA()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @param ColorRGBA= obj
   * @returns ColorRGBA|null
   */
  value(obj?: ColorRGBA): ColorRGBA | null {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset
      ? (obj || new ColorRGBA()).__init(this.bb_pos + offset, this.bb!)
      : null;
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startVectorColorRGBA(builder: flatbuffers.Builder) {
    builder.startObject(1);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset valueOffset
   */
  static addValue(
    builder: flatbuffers.Builder,
    valueOffset: flatbuffers.Offset
  ) {
    builder.addFieldStruct(0, valueOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endVectorColorRGBA(builder: flatbuffers.Builder): flatbuffers.Offset {
    var offset = builder.endObject();
    builder.requiredField(offset, 4); // value
    return offset;
  }
}
/**
 * @constructor
 */
export class Assertion {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns Assertion
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): Assertion {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param Assertion= obj
   * @returns Assertion
   */
  static getRootAsAssertion(
    bb: flatbuffers.ByteBuffer,
    obj?: Assertion
  ): Assertion {
    return (obj || new Assertion()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @param IRI= obj
   * @returns IRI|null
   */
  predicate(obj?: IRI): IRI | null {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset
      ? (obj || new IRI()).__init(
          this.bb!.__indirect(this.bb_pos + offset),
          this.bb!
        )
      : null;
  }

  /**
   * @returns ObjectValue
   */
  objectValueType(): ObjectValue {
    var offset = this.bb!.__offset(this.bb_pos, 6);
    return offset
      ? /**  */ this.bb!.readUint8(this.bb_pos + offset)
      : ObjectValue.NONE;
  }

  /**
   * @param flatbuffers.Table obj
   * @returns ?flatbuffers.Table
   */
  objectValue<T extends flatbuffers.Table>(obj: T): T | null {
    var offset = this.bb!.__offset(this.bb_pos, 8);
    return offset ? this.bb!.__union(obj, this.bb_pos + offset) : null;
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startAssertion(builder: flatbuffers.Builder) {
    builder.startObject(3);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset predicateOffset
   */
  static addPredicate(
    builder: flatbuffers.Builder,
    predicateOffset: flatbuffers.Offset
  ) {
    builder.addFieldOffset(0, predicateOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param ObjectValue objectValueType
   */
  static addObjectValueType(
    builder: flatbuffers.Builder,
    objectValueType: ObjectValue
  ) {
    builder.addFieldInt8(1, objectValueType, ObjectValue.NONE);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset objectValueOffset
   */
  static addObjectValue(
    builder: flatbuffers.Builder,
    objectValueOffset: flatbuffers.Offset
  ) {
    builder.addFieldOffset(2, objectValueOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endAssertion(builder: flatbuffers.Builder): flatbuffers.Offset {
    var offset = builder.endObject();
    builder.requiredField(offset, 4); // predicate
    builder.requiredField(offset, 8); // objectValue
    return offset;
  }
}
/**
 * @constructor
 */
export class Metadata {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns Metadata
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): Metadata {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param Metadata= obj
   * @returns Metadata
   */
  static getRootAsMetadata(
    bb: flatbuffers.ByteBuffer,
    obj?: Metadata
  ): Metadata {
    return (obj || new Metadata()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @returns number
   */
  id(): number {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
  }

  /**
   * @param number index
   * @param Assertion= obj
   * @returns Assertion
   */
  assertion(index: number, obj?: Assertion): Assertion | null {
    var offset = this.bb!.__offset(this.bb_pos, 6);
    return offset
      ? (obj || new Assertion()).__init(
          this.bb!.__indirect(
            this.bb!.__vector(this.bb_pos + offset) + index * 4
          ),
          this.bb!
        )
      : null;
  }

  /**
   * @returns number
   */
  assertionLength(): number {
    var offset = this.bb!.__offset(this.bb_pos, 6);
    return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startMetadata(builder: flatbuffers.Builder) {
    builder.startObject(2);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param number id
   */
  static addId(builder: flatbuffers.Builder, id: number) {
    builder.addFieldInt32(0, id, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset assertionOffset
   */
  static addAssertion(
    builder: flatbuffers.Builder,
    assertionOffset: flatbuffers.Offset
  ) {
    builder.addFieldOffset(1, assertionOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param Array.<flatbuffers.Offset> data
   * @returns flatbuffers.Offset
   */
  static createAssertionVector(
    builder: flatbuffers.Builder,
    data: flatbuffers.Offset[]
  ): flatbuffers.Offset {
    builder.startVector(4, data.length, 4);
    for (var i = data.length - 1; i >= 0; i--) {
      builder.addOffset(data[i]);
    }
    return builder.endVector();
  }

  /**
   * @param flatbuffers.Builder builder
   * @param number numElems
   */
  static startAssertionVector(builder: flatbuffers.Builder, numElems: number) {
    builder.startVector(4, numElems, 4);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endMetadata(builder: flatbuffers.Builder): flatbuffers.Offset {
    var offset = builder.endObject();
    return offset;
  }
}
/**
 * @constructor
 */
export class MoveTo {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns MoveTo
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): MoveTo {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @returns number
   */
  x(): number {
    return this.bb!.readUint32(this.bb_pos);
  }

  /**
   * @returns number
   */
  y(): number {
    return this.bb!.readUint32(this.bb_pos + 4);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param number x
   * @param number y
   * @returns flatbuffers.Offset
   */
  static createMoveTo(
    builder: flatbuffers.Builder,
    x: number,
    y: number
  ): flatbuffers.Offset {
    builder.prep(4, 8);
    builder.writeInt32(y);
    builder.writeInt32(x);
    return builder.offset();
  }
}
/**
 * @constructor
 */
export class LineTo {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns LineTo
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): LineTo {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @returns number
   */
  x(): number {
    return this.bb!.readUint32(this.bb_pos);
  }

  /**
   * @returns number
   */
  y(): number {
    return this.bb!.readUint32(this.bb_pos + 4);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param number x
   * @param number y
   * @returns flatbuffers.Offset
   */
  static createLineTo(
    builder: flatbuffers.Builder,
    x: number,
    y: number
  ): flatbuffers.Offset {
    builder.prep(4, 8);
    builder.writeInt32(y);
    builder.writeInt32(x);
    return builder.offset();
  }
}
/**
 * @constructor
 */
export class Horizontal {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns Horizontal
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): Horizontal {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @returns number
   */
  x(): number {
    return this.bb!.readUint32(this.bb_pos);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param number x
   * @returns flatbuffers.Offset
   */
  static createHorizontal(
    builder: flatbuffers.Builder,
    x: number
  ): flatbuffers.Offset {
    builder.prep(4, 4);
    builder.writeInt32(x);
    return builder.offset();
  }
}
/**
 * @constructor
 */
export class Vertical {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns Vertical
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): Vertical {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @returns number
   */
  y(): number {
    return this.bb!.readUint32(this.bb_pos);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param number y
   * @returns flatbuffers.Offset
   */
  static createVertical(
    builder: flatbuffers.Builder,
    y: number
  ): flatbuffers.Offset {
    builder.prep(4, 4);
    builder.writeInt32(y);
    return builder.offset();
  }
}
/**
 * @constructor
 */
export class CubicCurve {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns CubicCurve
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): CubicCurve {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @returns number
   */
  x1(): number {
    return this.bb!.readUint32(this.bb_pos);
  }

  /**
   * @returns number
   */
  y1(): number {
    return this.bb!.readUint32(this.bb_pos + 4);
  }

  /**
   * @returns number
   */
  x2(): number {
    return this.bb!.readUint32(this.bb_pos + 8);
  }

  /**
   * @returns number
   */
  y2(): number {
    return this.bb!.readUint32(this.bb_pos + 12);
  }

  /**
   * @returns number
   */
  x(): number {
    return this.bb!.readUint32(this.bb_pos + 16);
  }

  /**
   * @returns number
   */
  y(): number {
    return this.bb!.readUint32(this.bb_pos + 20);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param number x1
   * @param number y1
   * @param number x2
   * @param number y2
   * @param number x
   * @param number y
   * @returns flatbuffers.Offset
   */
  static createCubicCurve(
    builder: flatbuffers.Builder,
    x1: number,
    y1: number,
    x2: number,
    y2: number,
    x: number,
    y: number
  ): flatbuffers.Offset {
    builder.prep(4, 24);
    builder.writeInt32(y);
    builder.writeInt32(x);
    builder.writeInt32(y2);
    builder.writeInt32(x2);
    builder.writeInt32(y1);
    builder.writeInt32(x1);
    return builder.offset();
  }
}
/**
 * @constructor
 */
export class SmoothCubicCurve {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns SmoothCubicCurve
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): SmoothCubicCurve {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @returns number
   */
  x2(): number {
    return this.bb!.readUint32(this.bb_pos);
  }

  /**
   * @returns number
   */
  y2(): number {
    return this.bb!.readUint32(this.bb_pos + 4);
  }

  /**
   * @returns number
   */
  x(): number {
    return this.bb!.readUint32(this.bb_pos + 8);
  }

  /**
   * @returns number
   */
  y(): number {
    return this.bb!.readUint32(this.bb_pos + 12);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param number x2
   * @param number y2
   * @param number x
   * @param number y
   * @returns flatbuffers.Offset
   */
  static createSmoothCubicCurve(
    builder: flatbuffers.Builder,
    x2: number,
    y2: number,
    x: number,
    y: number
  ): flatbuffers.Offset {
    builder.prep(4, 16);
    builder.writeInt32(y);
    builder.writeInt32(x);
    builder.writeInt32(y2);
    builder.writeInt32(x2);
    return builder.offset();
  }
}
/**
 * @constructor
 */
export class QuadraticCurve {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns QuadraticCurve
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): QuadraticCurve {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @returns number
   */
  x1(): number {
    return this.bb!.readUint32(this.bb_pos);
  }

  /**
   * @returns number
   */
  y1(): number {
    return this.bb!.readUint32(this.bb_pos + 4);
  }

  /**
   * @returns number
   */
  x(): number {
    return this.bb!.readUint32(this.bb_pos + 8);
  }

  /**
   * @returns number
   */
  y(): number {
    return this.bb!.readUint32(this.bb_pos + 12);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param number x1
   * @param number y1
   * @param number x
   * @param number y
   * @returns flatbuffers.Offset
   */
  static createQuadraticCurve(
    builder: flatbuffers.Builder,
    x1: number,
    y1: number,
    x: number,
    y: number
  ): flatbuffers.Offset {
    builder.prep(4, 16);
    builder.writeInt32(y);
    builder.writeInt32(x);
    builder.writeInt32(y1);
    builder.writeInt32(x1);
    return builder.offset();
  }
}
/**
 * @constructor
 */
export class SmoothQuadraticCurve {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns SmoothQuadraticCurve
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): SmoothQuadraticCurve {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @returns number
   */
  x(): number {
    return this.bb!.readUint32(this.bb_pos);
  }

  /**
   * @returns number
   */
  y(): number {
    return this.bb!.readUint32(this.bb_pos + 4);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param number x
   * @param number y
   * @returns flatbuffers.Offset
   */
  static createSmoothQuadraticCurve(
    builder: flatbuffers.Builder,
    x: number,
    y: number
  ): flatbuffers.Offset {
    builder.prep(4, 8);
    builder.writeInt32(y);
    builder.writeInt32(x);
    return builder.offset();
  }
}
/**
 * @constructor
 */
export class EllipticalArc {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns EllipticalArc
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): EllipticalArc {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @returns number
   */
  rx(): number {
    return this.bb!.readUint32(this.bb_pos);
  }

  /**
   * @returns number
   */
  ry(): number {
    return this.bb!.readUint32(this.bb_pos + 4);
  }

  /**
   * @returns number
   */
  rotate(): number {
    return this.bb!.readFloat32(this.bb_pos + 8);
  }

  /**
   * @returns ArcFlag
   */
  arcFlag(): ArcFlag {
    return /**  */ this.bb!.readInt8(this.bb_pos + 12);
  }

  /**
   * @returns number
   */
  x(): number {
    return this.bb!.readUint32(this.bb_pos + 16);
  }

  /**
   * @returns number
   */
  y(): number {
    return this.bb!.readUint32(this.bb_pos + 20);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param number rx
   * @param number ry
   * @param number rotate
   * @param ArcFlag arcFlag
   * @param number x
   * @param number y
   * @returns flatbuffers.Offset
   */
  static createEllipticalArc(
    builder: flatbuffers.Builder,
    rx: number,
    ry: number,
    rotate: number,
    arcFlag: ArcFlag,
    x: number,
    y: number
  ): flatbuffers.Offset {
    builder.prep(4, 24);
    builder.writeInt32(y);
    builder.writeInt32(x);
    builder.pad(3);
    builder.writeInt8(arcFlag);
    builder.writeFloat32(rotate);
    builder.writeInt32(ry);
    builder.writeInt32(rx);
    return builder.offset();
  }
}
/**
 * @constructor
 */
export class Script {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns Script
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): Script {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param Script= obj
   * @returns Script
   */
  static getRootAsScript(bb: flatbuffers.ByteBuffer, obj?: Script): Script {
    return (obj || new Script()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @param Metadata= obj
   * @returns Metadata|null
   */
  metadata(obj?: Metadata): Metadata | null {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset
      ? (obj || new Metadata()).__init(
          this.bb!.__indirect(this.bb_pos + offset),
          this.bb!
        )
      : null;
  }

  /**
   * @returns anyUint
   */
  bytecodeType(): anyUint {
    var offset = this.bb!.__offset(this.bb_pos, 6);
    return offset
      ? /**  */ this.bb!.readUint8(this.bb_pos + offset)
      : anyUint.NONE;
  }

  /**
   * @param flatbuffers.Table obj
   * @returns ?flatbuffers.Table
   */
  bytecode<T extends flatbuffers.Table>(obj: T): T | null {
    var offset = this.bb!.__offset(this.bb_pos, 8);
    return offset ? this.bb!.__union(obj, this.bb_pos + offset) : null;
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startScript(builder: flatbuffers.Builder) {
    builder.startObject(3);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset metadataOffset
   */
  static addMetadata(
    builder: flatbuffers.Builder,
    metadataOffset: flatbuffers.Offset
  ) {
    builder.addFieldOffset(0, metadataOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param anyUint bytecodeType
   */
  static addBytecodeType(builder: flatbuffers.Builder, bytecodeType: anyUint) {
    builder.addFieldInt8(1, bytecodeType, anyUint.NONE);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset bytecodeOffset
   */
  static addBytecode(
    builder: flatbuffers.Builder,
    bytecodeOffset: flatbuffers.Offset
  ) {
    builder.addFieldOffset(2, bytecodeOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endScript(builder: flatbuffers.Builder): flatbuffers.Offset {
    var offset = builder.endObject();
    return offset;
  }
}
/**
 * @constructor
 */
export class Effect {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns Effect
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): Effect {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param Effect= obj
   * @returns Effect
   */
  static getRootAsEffect(bb: flatbuffers.ByteBuffer, obj?: Effect): Effect {
    return (obj || new Effect()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @param Metadata= obj
   * @returns Metadata|null
   */
  metadata(obj?: Metadata): Metadata | null {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset
      ? (obj || new Metadata()).__init(
          this.bb!.__indirect(this.bb_pos + offset),
          this.bb!
        )
      : null;
  }

  /**
   * @param Script= obj
   * @returns Script|null
   */
  script(obj?: Script): Script | null {
    var offset = this.bb!.__offset(this.bb_pos, 6);
    return offset
      ? (obj || new Script()).__init(
          this.bb!.__indirect(this.bb_pos + offset),
          this.bb!
        )
      : null;
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startEffect(builder: flatbuffers.Builder) {
    builder.startObject(2);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset metadataOffset
   */
  static addMetadata(
    builder: flatbuffers.Builder,
    metadataOffset: flatbuffers.Offset
  ) {
    builder.addFieldOffset(0, metadataOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset scriptOffset
   */
  static addScript(
    builder: flatbuffers.Builder,
    scriptOffset: flatbuffers.Offset
  ) {
    builder.addFieldOffset(1, scriptOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endEffect(builder: flatbuffers.Builder): flatbuffers.Offset {
    var offset = builder.endObject();
    return offset;
  }
}
/**
 * @constructor
 */
export class Shape {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns Shape
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): Shape {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param Shape= obj
   * @returns Shape
   */
  static getRootAsShape(bb: flatbuffers.ByteBuffer, obj?: Shape): Shape {
    return (obj || new Shape()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @param Metadata= obj
   * @returns Metadata|null
   */
  metadata(obj?: Metadata): Metadata | null {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset
      ? (obj || new Metadata()).__init(
          this.bb!.__indirect(this.bb_pos + offset),
          this.bb!
        )
      : null;
  }

  /**
   * @param number index
   * @returns Draw
   */
  drawingType(index: number): Draw | null {
    var offset = this.bb!.__offset(this.bb_pos, 6);
    return offset
      ? /**  */ this.bb!.readUint8(
          this.bb!.__vector(this.bb_pos + offset) + index
        )
      : /**  */ 0;
  }

  /**
   * @returns number
   */
  drawingTypeLength(): number {
    var offset = this.bb!.__offset(this.bb_pos, 6);
    return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
  }

  /**
   * @returns Uint8Array
   */
  drawingTypeArray(): Uint8Array | null {
    var offset = this.bb!.__offset(this.bb_pos, 6);
    return offset
      ? new Uint8Array(
          this.bb!.bytes().buffer,
          this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset),
          this.bb!.__vector_len(this.bb_pos + offset)
        )
      : null;
  }

  /**
   * @param number index
   * @param flatbuffers.Table= obj
   * @returns ?flatbuffers.Table
   */
  drawing<T extends flatbuffers.Table>(index: number, obj: T): T | null {
    var offset = this.bb!.__offset(this.bb_pos, 8);
    return offset
      ? this.bb!.__union(
          obj,
          this.bb!.__vector(this.bb_pos + offset) + index * 4
        )
      : null;
  }

  /**
   * @returns number
   */
  drawingLength(): number {
    var offset = this.bb!.__offset(this.bb_pos, 8);
    return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
  }

  /**
   * @param number index
   * @param Effect= obj
   * @returns Effect
   */
  effect(index: number, obj?: Effect): Effect | null {
    var offset = this.bb!.__offset(this.bb_pos, 10);
    return offset
      ? (obj || new Effect()).__init(
          this.bb!.__indirect(
            this.bb!.__vector(this.bb_pos + offset) + index * 4
          ),
          this.bb!
        )
      : null;
  }

  /**
   * @returns number
   */
  effectLength(): number {
    var offset = this.bb!.__offset(this.bb_pos, 10);
    return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startShape(builder: flatbuffers.Builder) {
    builder.startObject(4);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset metadataOffset
   */
  static addMetadata(
    builder: flatbuffers.Builder,
    metadataOffset: flatbuffers.Offset
  ) {
    builder.addFieldOffset(0, metadataOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset drawingTypeOffset
   */
  static addDrawingType(
    builder: flatbuffers.Builder,
    drawingTypeOffset: flatbuffers.Offset
  ) {
    builder.addFieldOffset(1, drawingTypeOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param Array.<Draw> data
   * @returns flatbuffers.Offset
   */
  static createDrawingTypeVector(
    builder: flatbuffers.Builder,
    data: Draw[]
  ): flatbuffers.Offset {
    builder.startVector(1, data.length, 1);
    for (var i = data.length - 1; i >= 0; i--) {
      builder.addInt8(data[i]);
    }
    return builder.endVector();
  }

  /**
   * @param flatbuffers.Builder builder
   * @param number numElems
   */
  static startDrawingTypeVector(
    builder: flatbuffers.Builder,
    numElems: number
  ) {
    builder.startVector(1, numElems, 1);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset drawingOffset
   */
  static addDrawing(
    builder: flatbuffers.Builder,
    drawingOffset: flatbuffers.Offset
  ) {
    builder.addFieldOffset(2, drawingOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param Array.<flatbuffers.Offset> data
   * @returns flatbuffers.Offset
   */
  static createDrawingVector(
    builder: flatbuffers.Builder,
    data: flatbuffers.Offset[]
  ): flatbuffers.Offset {
    builder.startVector(4, data.length, 4);
    for (var i = data.length - 1; i >= 0; i--) {
      builder.addOffset(data[i]);
    }
    return builder.endVector();
  }

  /**
   * @param flatbuffers.Builder builder
   * @param number numElems
   */
  static startDrawingVector(builder: flatbuffers.Builder, numElems: number) {
    builder.startVector(4, numElems, 4);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset effectOffset
   */
  static addEffect(
    builder: flatbuffers.Builder,
    effectOffset: flatbuffers.Offset
  ) {
    builder.addFieldOffset(3, effectOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param Array.<flatbuffers.Offset> data
   * @returns flatbuffers.Offset
   */
  static createEffectVector(
    builder: flatbuffers.Builder,
    data: flatbuffers.Offset[]
  ): flatbuffers.Offset {
    builder.startVector(4, data.length, 4);
    for (var i = data.length - 1; i >= 0; i--) {
      builder.addOffset(data[i]);
    }
    return builder.endVector();
  }

  /**
   * @param flatbuffers.Builder builder
   * @param number numElems
   */
  static startEffectVector(builder: flatbuffers.Builder, numElems: number) {
    builder.startVector(4, numElems, 4);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endShape(builder: flatbuffers.Builder): flatbuffers.Offset {
    var offset = builder.endObject();
    return offset;
  }
}
/**
 * @constructor
 */
export class VectorialLayer {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns VectorialLayer
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): VectorialLayer {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param VectorialLayer= obj
   * @returns VectorialLayer
   */
  static getRootAsVectorialLayer(
    bb: flatbuffers.ByteBuffer,
    obj?: VectorialLayer
  ): VectorialLayer {
    return (obj || new VectorialLayer()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @param number index
   * @param Shape= obj
   * @returns Shape
   */
  shapes(index: number, obj?: Shape): Shape | null {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset
      ? (obj || new Shape()).__init(
          this.bb!.__indirect(
            this.bb!.__vector(this.bb_pos + offset) + index * 4
          ),
          this.bb!
        )
      : null;
  }

  /**
   * @returns number
   */
  shapesLength(): number {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startVectorialLayer(builder: flatbuffers.Builder) {
    builder.startObject(1);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset shapesOffset
   */
  static addShapes(
    builder: flatbuffers.Builder,
    shapesOffset: flatbuffers.Offset
  ) {
    builder.addFieldOffset(0, shapesOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param Array.<flatbuffers.Offset> data
   * @returns flatbuffers.Offset
   */
  static createShapesVector(
    builder: flatbuffers.Builder,
    data: flatbuffers.Offset[]
  ): flatbuffers.Offset {
    builder.startVector(4, data.length, 4);
    for (var i = data.length - 1; i >= 0; i--) {
      builder.addOffset(data[i]);
    }
    return builder.endVector();
  }

  /**
   * @param flatbuffers.Builder builder
   * @param number numElems
   */
  static startShapesVector(builder: flatbuffers.Builder, numElems: number) {
    builder.startVector(4, numElems, 4);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endVectorialLayer(builder: flatbuffers.Builder): flatbuffers.Offset {
    var offset = builder.endObject();
    return offset;
  }
}
/**
 * @constructor
 */
export class RawLayer {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns RawLayer
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): RawLayer {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param RawLayer= obj
   * @returns RawLayer
   */
  static getRootAsRawLayer(
    bb: flatbuffers.ByteBuffer,
    obj?: RawLayer
  ): RawLayer {
    return (obj || new RawLayer()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @returns anyUint
   */
  rawType(): anyUint {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset
      ? /**  */ this.bb!.readUint8(this.bb_pos + offset)
      : anyUint.NONE;
  }

  /**
   * @param flatbuffers.Table obj
   * @returns ?flatbuffers.Table
   */
  raw<T extends flatbuffers.Table>(obj: T): T | null {
    var offset = this.bb!.__offset(this.bb_pos, 6);
    return offset ? this.bb!.__union(obj, this.bb_pos + offset) : null;
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startRawLayer(builder: flatbuffers.Builder) {
    builder.startObject(2);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param anyUint rawType
   */
  static addRawType(builder: flatbuffers.Builder, rawType: anyUint) {
    builder.addFieldInt8(0, rawType, anyUint.NONE);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset rawOffset
   */
  static addRaw(builder: flatbuffers.Builder, rawOffset: flatbuffers.Offset) {
    builder.addFieldOffset(1, rawOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endRawLayer(builder: flatbuffers.Builder): flatbuffers.Offset {
    var offset = builder.endObject();
    return offset;
  }
}
/**
 * @constructor
 */
export class Layer {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns Layer
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): Layer {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param Layer= obj
   * @returns Layer
   */
  static getRootAsLayer(bb: flatbuffers.ByteBuffer, obj?: Layer): Layer {
    return (obj || new Layer()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @param Metadata= obj
   * @returns Metadata|null
   */
  metadata(obj?: Metadata): Metadata | null {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset
      ? (obj || new Metadata()).__init(
          this.bb!.__indirect(this.bb_pos + offset),
          this.bb!
        )
      : null;
  }

  /**
   * @returns LayerData
   */
  dataType(): LayerData {
    var offset = this.bb!.__offset(this.bb_pos, 6);
    return offset
      ? /**  */ this.bb!.readUint8(this.bb_pos + offset)
      : LayerData.NONE;
  }

  /**
   * @param flatbuffers.Table obj
   * @returns ?flatbuffers.Table
   */
  data<T extends flatbuffers.Table>(obj: T): T | null {
    var offset = this.bb!.__offset(this.bb_pos, 8);
    return offset ? this.bb!.__union(obj, this.bb_pos + offset) : null;
  }

  /**
   * @param number index
   * @param Effect= obj
   * @returns Effect
   */
  effect(index: number, obj?: Effect): Effect | null {
    var offset = this.bb!.__offset(this.bb_pos, 10);
    return offset
      ? (obj || new Effect()).__init(
          this.bb!.__indirect(
            this.bb!.__vector(this.bb_pos + offset) + index * 4
          ),
          this.bb!
        )
      : null;
  }

  /**
   * @returns number
   */
  effectLength(): number {
    var offset = this.bb!.__offset(this.bb_pos, 10);
    return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startLayer(builder: flatbuffers.Builder) {
    builder.startObject(4);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset metadataOffset
   */
  static addMetadata(
    builder: flatbuffers.Builder,
    metadataOffset: flatbuffers.Offset
  ) {
    builder.addFieldOffset(0, metadataOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param LayerData dataType
   */
  static addDataType(builder: flatbuffers.Builder, dataType: LayerData) {
    builder.addFieldInt8(1, dataType, LayerData.NONE);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset dataOffset
   */
  static addData(builder: flatbuffers.Builder, dataOffset: flatbuffers.Offset) {
    builder.addFieldOffset(2, dataOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset effectOffset
   */
  static addEffect(
    builder: flatbuffers.Builder,
    effectOffset: flatbuffers.Offset
  ) {
    builder.addFieldOffset(3, effectOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param Array.<flatbuffers.Offset> data
   * @returns flatbuffers.Offset
   */
  static createEffectVector(
    builder: flatbuffers.Builder,
    data: flatbuffers.Offset[]
  ): flatbuffers.Offset {
    builder.startVector(4, data.length, 4);
    for (var i = data.length - 1; i >= 0; i--) {
      builder.addOffset(data[i]);
    }
    return builder.endVector();
  }

  /**
   * @param flatbuffers.Builder builder
   * @param number numElems
   */
  static startEffectVector(builder: flatbuffers.Builder, numElems: number) {
    builder.startVector(4, numElems, 4);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endLayer(builder: flatbuffers.Builder): flatbuffers.Offset {
    var offset = builder.endObject();
    return offset;
  }
}
/**
 * @constructor
 */
export class Publishing {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns Publishing
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): Publishing {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param Publishing= obj
   * @returns Publishing
   */
  static getRootAsPublishing(
    bb: flatbuffers.ByteBuffer,
    obj?: Publishing
  ): Publishing {
    return (obj || new Publishing()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @param Metadata= obj
   * @returns Metadata|null
   */
  metadata(obj?: Metadata): Metadata | null {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset
      ? (obj || new Metadata()).__init(
          this.bb!.__indirect(this.bb_pos + offset),
          this.bb!
        )
      : null;
  }

  /**
   * @param number index
   * @param Layer= obj
   * @returns Layer
   */
  layer(index: number, obj?: Layer): Layer | null {
    var offset = this.bb!.__offset(this.bb_pos, 6);
    return offset
      ? (obj || new Layer()).__init(
          this.bb!.__indirect(
            this.bb!.__vector(this.bb_pos + offset) + index * 4
          ),
          this.bb!
        )
      : null;
  }

  /**
   * @returns number
   */
  layerLength(): number {
    var offset = this.bb!.__offset(this.bb_pos, 6);
    return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
  }

  /**
   * @param number index
   * @param Effect= obj
   * @returns Effect
   */
  effect(index: number, obj?: Effect): Effect | null {
    var offset = this.bb!.__offset(this.bb_pos, 8);
    return offset
      ? (obj || new Effect()).__init(
          this.bb!.__indirect(
            this.bb!.__vector(this.bb_pos + offset) + index * 4
          ),
          this.bb!
        )
      : null;
  }

  /**
   * @returns number
   */
  effectLength(): number {
    var offset = this.bb!.__offset(this.bb_pos, 8);
    return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startPublishing(builder: flatbuffers.Builder) {
    builder.startObject(3);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset metadataOffset
   */
  static addMetadata(
    builder: flatbuffers.Builder,
    metadataOffset: flatbuffers.Offset
  ) {
    builder.addFieldOffset(0, metadataOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset layerOffset
   */
  static addLayer(
    builder: flatbuffers.Builder,
    layerOffset: flatbuffers.Offset
  ) {
    builder.addFieldOffset(1, layerOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param Array.<flatbuffers.Offset> data
   * @returns flatbuffers.Offset
   */
  static createLayerVector(
    builder: flatbuffers.Builder,
    data: flatbuffers.Offset[]
  ): flatbuffers.Offset {
    builder.startVector(4, data.length, 4);
    for (var i = data.length - 1; i >= 0; i--) {
      builder.addOffset(data[i]);
    }
    return builder.endVector();
  }

  /**
   * @param flatbuffers.Builder builder
   * @param number numElems
   */
  static startLayerVector(builder: flatbuffers.Builder, numElems: number) {
    builder.startVector(4, numElems, 4);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset effectOffset
   */
  static addEffect(
    builder: flatbuffers.Builder,
    effectOffset: flatbuffers.Offset
  ) {
    builder.addFieldOffset(2, effectOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param Array.<flatbuffers.Offset> data
   * @returns flatbuffers.Offset
   */
  static createEffectVector(
    builder: flatbuffers.Builder,
    data: flatbuffers.Offset[]
  ): flatbuffers.Offset {
    builder.startVector(4, data.length, 4);
    for (var i = data.length - 1; i >= 0; i--) {
      builder.addOffset(data[i]);
    }
    return builder.endVector();
  }

  /**
   * @param flatbuffers.Builder builder
   * @param number numElems
   */
  static startEffectVector(builder: flatbuffers.Builder, numElems: number) {
    builder.startVector(4, numElems, 4);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endPublishing(builder: flatbuffers.Builder): flatbuffers.Offset {
    var offset = builder.endObject();
    return offset;
  }
}
/**
 * @constructor
 */
export class Album {
  bb: flatbuffers.ByteBuffer | null = null;

  bb_pos: number = 0;
  /**
   * @param number i
   * @param flatbuffers.ByteBuffer bb
   * @returns Album
   */
  __init(i: number, bb: flatbuffers.ByteBuffer): Album {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @param Album= obj
   * @returns Album
   */
  static getRootAsAlbum(bb: flatbuffers.ByteBuffer, obj?: Album): Album {
    return (obj || new Album()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb
    );
  }

  /**
   * @param flatbuffers.ByteBuffer bb
   * @returns boolean
   */
  static bufferHasIdentifier(bb: flatbuffers.ByteBuffer): boolean {
    return bb.__has_identifier('DALN');
  }

  /**
   * @param Metadata= obj
   * @returns Metadata|null
   */
  metadata(obj?: Metadata): Metadata | null {
    var offset = this.bb!.__offset(this.bb_pos, 4);
    return offset
      ? (obj || new Metadata()).__init(
          this.bb!.__indirect(this.bb_pos + offset),
          this.bb!
        )
      : null;
  }

  /**
   * @param number index
   * @param Publishing= obj
   * @returns Publishing
   */
  publishing(index: number, obj?: Publishing): Publishing | null {
    var offset = this.bb!.__offset(this.bb_pos, 6);
    return offset
      ? (obj || new Publishing()).__init(
          this.bb!.__indirect(
            this.bb!.__vector(this.bb_pos + offset) + index * 4
          ),
          this.bb!
        )
      : null;
  }

  /**
   * @returns number
   */
  publishingLength(): number {
    var offset = this.bb!.__offset(this.bb_pos, 6);
    return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
  }

  /**
   * @param flatbuffers.Builder builder
   */
  static startAlbum(builder: flatbuffers.Builder) {
    builder.startObject(2);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset metadataOffset
   */
  static addMetadata(
    builder: flatbuffers.Builder,
    metadataOffset: flatbuffers.Offset
  ) {
    builder.addFieldOffset(0, metadataOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset publishingOffset
   */
  static addPublishing(
    builder: flatbuffers.Builder,
    publishingOffset: flatbuffers.Offset
  ) {
    builder.addFieldOffset(1, publishingOffset, 0);
  }

  /**
   * @param flatbuffers.Builder builder
   * @param Array.<flatbuffers.Offset> data
   * @returns flatbuffers.Offset
   */
  static createPublishingVector(
    builder: flatbuffers.Builder,
    data: flatbuffers.Offset[]
  ): flatbuffers.Offset {
    builder.startVector(4, data.length, 4);
    for (var i = data.length - 1; i >= 0; i--) {
      builder.addOffset(data[i]);
    }
    return builder.endVector();
  }

  /**
   * @param flatbuffers.Builder builder
   * @param number numElems
   */
  static startPublishingVector(builder: flatbuffers.Builder, numElems: number) {
    builder.startVector(4, numElems, 4);
  }

  /**
   * @param flatbuffers.Builder builder
   * @returns flatbuffers.Offset
   */
  static endAlbum(builder: flatbuffers.Builder): flatbuffers.Offset {
    var offset = builder.endObject();
    return offset;
  }

  /**
   * @param flatbuffers.Builder builder
   * @param flatbuffers.Offset offset
   */
  static finishAlbumBuffer(
    builder: flatbuffers.Builder,
    offset: flatbuffers.Offset
  ) {
    builder.finish(offset, 'DALN');
  }
}
